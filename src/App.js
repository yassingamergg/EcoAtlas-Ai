import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell, Legend } from 'recharts';
import { Leaf, Zap, Calculator, Lightbulb, Info, MessageCircle, X, Users, TrendingDown, Wifi, Thermometer, Droplet, Wind, FileText, Target, ShoppingCart, Globe, Brain, Plug, Settings, Download, Trophy, Star, Award, Smartphone, Car, Home, Calendar, Bell, Languages, Eye, Key, BarChart3, Activity, TrendingUp, Menu } from 'lucide-react';
import jsPDF from 'jspdf';
import UserProfile from './components/UserProfile';
import html2canvas from 'html2canvas';
import GoogleSignIn from './components/GoogleSignIn';
import { AuthProvider } from './contexts/AuthContext';
import { ThemeProvider, useTheme } from './contexts/ThemeContext';
import ThemeToggle from './components/ThemeToggle';
import ThemeSelector from './components/ThemeSelector';

// PDF Report Generation Functions
const generateCarbonFootprintReport = (entries, scopeTotals, totalEmissions) => {
  const doc = new jsPDF();
  const currentDate = new Date().toLocaleDateString();
  
  // Ensure we have valid data with fallbacks
  const safeEntries = entries || [];
  const safeScopeTotals = scopeTotals || { scope1: 0, scope2: 0, scope3: 0 };
  const safeTotalEmissions = totalEmissions || 0;
  
  // Header
  doc.setFillColor(34, 197, 94); // Green color
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('EcoAtlas AI', 20, 20);
  doc.setFontSize(12);
  doc.text('Carbon Footprint Report', 20, 26);
  
  // Report Info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(10);
  doc.text(`Generated on: ${currentDate}`, 20, 40);
  doc.text(`Total Entries: ${safeEntries.length}`, 20, 45);
  
  // Summary Section
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Executive Summary', 20, 60);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text(`Total Carbon Footprint: ${safeTotalEmissions.toFixed(2)} kg CO₂`, 20, 75);
  doc.text(`Scope 1 (Direct): ${safeScopeTotals.scope1.toFixed(2)} kg CO₂`, 20, 80);
  doc.text(`Scope 2 (Indirect): ${safeScopeTotals.scope2.toFixed(2)} kg CO₂`, 20, 85);
  doc.text(`Scope 3 (Other): ${safeScopeTotals.scope3.toFixed(2)} kg CO₂`, 20, 90);
  
  // Recent Entries Table
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Recent Entries', 20, 110);
  
  // Table headers
  doc.setFontSize(10);
  doc.setFont('helvetica', 'bold');
  doc.text('Date', 20, 120);
  doc.text('Category', 50, 120);
  doc.text('Activity', 90, 120);
  doc.text('Amount', 140, 120);
  doc.text('Emissions', 170, 120);
  
  // Table data
  doc.setFont('helvetica', 'normal');
  let yPosition = 130;
  const recentEntries = safeEntries.slice(-10).reverse(); // Last 10 entries
  
  recentEntries.forEach((entry, index) => {
    if (yPosition > 280) {
      doc.addPage();
      yPosition = 20;
    }
    
    const safeEntry = entry || {};
    doc.text(safeEntry.date || 'N/A', 20, yPosition);
    doc.text(safeEntry.category || 'N/A', 50, yPosition);
    doc.text(safeEntry.activity || 'N/A', 90, yPosition);
    doc.text(`${safeEntry.amount || 0} ${safeEntry.unit || ''}`, 140, yPosition);
    doc.text(`${(safeEntry.emissions || 0).toFixed(2)} kg CO₂`, 170, yPosition);
    yPosition += 8;
  });
  
  // Recommendations
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Recommendations', 20, yPosition + 10);
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  const recommendations = [
    '• Consider using public transportation for daily commutes',
    '• Switch to energy-efficient appliances',
    '• Reduce meat consumption in your diet',
    '• Use renewable energy sources when possible',
    '• Implement smart home automation for energy savings'
  ];
  
  recommendations.forEach((rec, index) => {
    doc.text(rec, 20, yPosition + 20 + (index * 8));
  });
  
  // Footer
  doc.setFontSize(8);
  doc.setTextColor(128, 128, 128);
  doc.text('Generated by EcoAtlas AI - Your Carbon Footprint Companion', 20, 290);
  
  return doc;
};

const generateIoTSensorReport = (sensorData) => {
  const doc = new jsPDF();
  const currentDate = new Date().toLocaleDateString();
  
  // Header
  doc.setFillColor(59, 130, 246); // Blue color
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('EcoAtlas IoT', 20, 20);
  doc.setFontSize(12);
  doc.text('Sensor Network Report', 20, 26);
  
  // Report Info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(10);
  doc.text(`Generated on: ${currentDate}`, 20, 40);
  doc.text(`Data Points: 2.4M this month`, 20, 45);
  
  // Network Status
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Network Status', 20, 60);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('Network Uptime: 99.7%', 20, 75);
  doc.text('Total Sensors: 6 (5 online)', 20, 80);
  doc.text('Protocol: MQTT over TLS 1.3', 20, 85);
  doc.text('Signal Strength: -48 dBm', 20, 90);
  
  // Sensor Data
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Sensor Readings', 20, 110);
  
  // Table headers
  doc.setFontSize(10);
  doc.setFont('helvetica', 'bold');
  doc.text('Sensor', 20, 120);
  doc.text('Location', 70, 120);
  doc.text('Status', 120, 120);
  doc.text('Value', 160, 120);
  
  // Table data
  doc.setFont('helvetica', 'normal');
  const sensors = [
    { name: 'Temperature Sensor', location: 'Living Room', status: 'Online', value: '22.5°C' },
    { name: 'Humidity Sensor', location: 'Office', status: 'Online', value: '45%' },
    { name: 'CO₂ Monitor', location: 'Kitchen', status: 'Online', value: '420 ppm' },
    { name: 'Energy Monitor', location: 'Bedroom', status: 'Online', value: '2.3 kW' },
    { name: 'Air Quality', location: 'Living Room', status: 'Online', value: 'Good' },
    { name: 'Water Leak', location: 'Bathroom', status: 'Offline', value: 'N/A' }
  ];
  
  let yPosition = 130;
  sensors.forEach((sensor, index) => {
    if (yPosition > 280) {
      doc.addPage();
      yPosition = 20;
    }
    
    doc.text(sensor.name, 20, yPosition);
    doc.text(sensor.location, 70, yPosition);
    doc.text(sensor.status, 120, yPosition);
    doc.text(sensor.value, 160, yPosition);
    yPosition += 8;
  });
  
  // Performance Metrics
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Performance Metrics', 20, yPosition + 10);
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.text('Data Throughput: 2.4 Mbps', 20, yPosition + 20);
  doc.text('Packet Loss: 0.1%', 20, yPosition + 28);
  doc.text('Latency: 12ms', 20, yPosition + 36);
  doc.text('Battery Life: 18 days', 20, yPosition + 44);
  
  // Footer
  doc.setFontSize(8);
  doc.setTextColor(128, 128, 128);
  doc.text('Generated by EcoAtlas AI - IoT Sensor Network', 20, 290);
  
  return doc;
};

const generateAIAnalyticsReport = () => {
  const doc = new jsPDF();
  const currentDate = new Date().toLocaleDateString();
  
  // Header
  doc.setFillColor(147, 51, 234); // Purple color
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('EcoAtlas AI', 20, 20);
  doc.setFontSize(12);
  doc.text('AI Analytics Report', 20, 26);
  
  // Report Info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(10);
  doc.text(`Generated on: ${currentDate}`, 20, 40);
  
  // AI Performance
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('AI Performance Metrics', 20, 60);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('AI Accuracy Rate: 94%', 20, 75);
  doc.text('Recommendations Followed: 8/12', 20, 80);
  doc.text('CO₂ Saved: 42.5 kg this month', 20, 85);
  doc.text('Money Saved: AED 467', 20, 90);
  doc.text('Learning Progress: 78%', 20, 95);
  
  // Weekly Action Plan
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Weekly Action Plan', 20, 115);
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  const weeklyActions = [
    'Monday: Walk to work (weather permitting) - 2.1 kg CO₂ saved',
    'Tuesday: Prepare plant-based lunch - 0.8 kg CO₂ saved',
    'Wednesday: Lower thermostat by 2°C - 1.2 kg CO₂ saved',
    'Thursday: Use bike for errands - 1.8 kg CO₂ saved',
    'Friday: Work from home - 3.4 kg CO₂ saved',
    'Weekend: Local activities only - 2.5 kg CO₂ saved'
  ];
  
  weeklyActions.forEach((action, index) => {
    doc.text(action, 20, 130 + (index * 8));
  });
  
  // Smart Insights
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Smart Insights', 20, 190);
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.text('• Your commute generates 68% of transport emissions', 20, 205);
  doc.text('• Home heating peaks during evening hours (6-9 PM)', 20, 213);
  doc.text('• Food choices are already optimized - keep it up!', 20, 221);
  
  // Footer
  doc.setFontSize(8);
  doc.setTextColor(128, 128, 128);
  doc.text('Generated by EcoAtlas AI - AI Personal Advisor', 20, 290);
  
  return doc;
};

// Energy Usage Analysis Report
const generateEnergyUsageReport = () => {
  const doc = new jsPDF();
  const currentDate = new Date().toLocaleDateString();
  
  // Header
  doc.setFillColor(59, 130, 246); // Blue color
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('EcoAtlas AI', 20, 20);
  doc.setFontSize(12);
  doc.text('Energy Usage Analysis - Q2 2025', 20, 26);
  
  // Report Info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(10);
  doc.text(`Generated on: ${currentDate}`, 20, 40);
  
  // Executive Summary
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Executive Summary', 20, 60);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('This report analyzes energy consumption patterns and provides', 20, 75);
  doc.text('recommendations for optimization across residential and commercial sectors.', 20, 80);
  
  // Key Findings
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Key Findings', 20, 100);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Total Energy Consumption: 2,847 kWh', 20, 115);
  doc.text('• Peak Usage Hours: 6-9 PM (34% of daily consumption)', 20, 120);
  doc.text('• Energy Efficiency Score: 7.2/10', 20, 125);
  doc.text('• Potential Savings: 18.5% with recommended changes', 20, 130);
  doc.text('• Renewable Energy Integration: 23% of total usage', 20, 135);
  
  // Recommendations
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Recommendations', 20, 155);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Implement smart thermostat controls', 20, 170);
  doc.text('• Upgrade to LED lighting systems', 20, 175);
  doc.text('• Install solar panel system (5kW recommended)', 20, 180);
  doc.text('• Optimize HVAC scheduling', 20, 185);
  doc.text('• Consider energy storage solutions', 20, 190);
  
  // Footer
  doc.setFontSize(8);
  doc.text('Generated by EcoAtlas AI - Energy Analytics Platform', 20, 280);
  
  return doc;
};

// Transportation Impact Report
const generateTransportationReport = () => {
  const doc = new jsPDF();
  const currentDate = new Date().toLocaleDateString();
  
  // Header
  doc.setFillColor(34, 197, 94); // Green color
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('EcoAtlas AI', 20, 20);
  doc.setFontSize(12);
  doc.text('Transportation Impact Report', 20, 26);
  
  // Report Info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(10);
  doc.text(`Generated on: ${currentDate}`, 20, 40);
  
  // Overview
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Transportation Overview', 20, 60);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('Analysis of transportation-related carbon emissions and', 20, 75);
  doc.text('sustainability recommendations for personal and business travel.', 20, 80);
  
  // Travel Statistics
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Travel Statistics', 20, 100);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Total Distance Traveled: 3,247 km', 20, 115);
  doc.text('• Carbon Emissions: 487 kg CO₂e', 20, 120);
  doc.text('• Primary Transport: Personal Vehicle (67%)', 20, 125);
  doc.text('• Public Transport Usage: 23%', 20, 130);
  doc.text('• Walking/Cycling: 10%', 20, 135);
  
  // Impact Analysis
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Impact Analysis', 20, 155);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Above average emissions for urban area', 20, 170);
  doc.text('• 34% higher than recommended target', 20, 175);
  doc.text('• Potential reduction: 156 kg CO₂e/year', 20, 180);
  doc.text('• Cost savings potential: $1,247 annually', 20, 185);
  
  // Recommendations
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Recommendations', 20, 205);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Increase public transport usage to 40%', 20, 220);
  doc.text('• Consider electric vehicle transition', 20, 225);
  doc.text('• Implement carpooling for work commute', 20, 230);
  doc.text('• Plan routes to minimize distance', 20, 235);
  doc.text('• Use bike sharing for short trips', 20, 240);
  
  // Footer
  doc.setFontSize(8);
  doc.text('Generated by EcoAtlas AI - Transportation Analytics', 20, 280);
  
  return doc;
};

// Annual Sustainability Report
const generateAnnualSustainabilityReport = () => {
  const doc = new jsPDF();
  const currentDate = new Date().toLocaleDateString();
  
  // Header
  doc.setFillColor(168, 85, 247); // Purple color
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('EcoAtlas AI', 20, 20);
  doc.setFontSize(12);
  doc.text('Annual Sustainability Report 2024', 20, 26);
  
  // Report Info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(10);
  doc.text(`Generated on: ${currentDate}`, 20, 40);
  
  // Executive Summary
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Executive Summary', 20, 60);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('Comprehensive annual review of environmental impact,', 20, 75);
  doc.text('sustainability achievements, and future goals for 2024.', 20, 80);
  
  // Key Achievements
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Key Achievements 2024', 20, 100);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Total Carbon Footprint: 2.3 tons CO₂e', 20, 115);
  doc.text('• Reduction from 2023: 18.7%', 20, 120);
  doc.text('• Renewable Energy Usage: 45%', 20, 125);
  doc.text('• Waste Diversion Rate: 78%', 20, 130);
  doc.text('• Water Conservation: 23% reduction', 20, 135);
  
  // Environmental Impact
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('Environmental Impact', 20, 155);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Energy Consumption: 8,247 kWh', 20, 170);
  doc.text('• Transportation Emissions: 487 kg CO₂e', 20, 175);
  doc.text('• Waste Generated: 1.2 tons', 20, 180);
  doc.text('• Water Usage: 45,000 gallons', 20, 185);
  doc.text('• Trees Equivalent Planted: 12', 20, 190);
  
  // 2025 Goals
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('2025 Sustainability Goals', 20, 210);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('• Achieve carbon neutrality', 20, 225);
  doc.text('• Increase renewable energy to 60%', 20, 230);
  doc.text('• Reduce waste by 25%', 20, 235);
  doc.text('• Implement smart home automation', 20, 240);
  doc.text('• Join community solar program', 20, 245);
  
  // Footer
  doc.setFontSize(8);
  doc.text('Generated by EcoAtlas AI - Annual Sustainability Review', 20, 280);
  
  return doc;
};

// Test PDF generation function
const testPDFGeneration = () => {
  try {
    console.log('Testing PDF generation...');
    const doc = new jsPDF();
    doc.text('Test PDF', 20, 20);
    doc.save('test-pdf.pdf');
    console.log('PDF generation test successful!');
    return true;
  } catch (error) {
    console.error('PDF generation test failed:', error);
    return false;
  }
};

// EcoAtlas Logo Component using PNG
const EcoAtlasLogo = ({ className = "w-8 h-8" }) => (
  <img 
    src="/ecoatlas-logo.png" 
    alt="EcoAtlas AI Logo" 
    className={className}
    style={{ 
      borderRadius: '6px',
      objectFit: 'contain'
    }}
  />
);

const EcoAtlasApp = () => {
  const { isDarkMode } = useTheme();
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [showLogin, setShowLogin] = useState(true);
  const [activeTab, setActiveTab] = useState('dashboard');
  const [showDrawer, setShowDrawer] = useState(false);
  const [showAIChat, setShowAIChat] = useState(false);

  // Handle tab change and close drawer
  const handleTabChange = (tabId) => {
    setActiveTab(tabId);
    setShowDrawer(false);
  };
  const [chatMessages, setChatMessages] = useState([]);
  const [currentMessage, setCurrentMessage] = useState('');
  const [user, setUser] = useState(null);
  const [authMethod, setAuthMethod] = useState('demo'); // 'demo' or 'google'
  const [supportMessages, setSupportMessages] = useState([
    {
      id: 1,
      text: "Hi, I'm your carbon support assistant. I can help you calculate emissions, explain carbon footprint terms, and guide you through our tools. What would you like help with today?",
      sender: 'support',
      timestamp: new Date().toLocaleTimeString()
    }
  ]);
  const [supportMessage, setSupportMessage] = useState('');
  const [carbonData, setCarbonData] = useState({
    daily: 0,
    weekly: 0,
    monthly: 0,
    yearly: 0
  });

  // Fake data for demonstrations
  const dashboardData = [
    { name: 'Jan', carbon: 12.5, target: 10 },
    { name: 'Feb', carbon: 11.8, target: 10 },
    { name: 'Mar', carbon: 10.2, target: 10 },
    { name: 'Apr', carbon: 9.8, target: 10 },
    { name: 'May', carbon: 10.5, target: 10 },
    { name: 'Jun', carbon: 9.2, target: 10 }
  ];

  const iotSensorData = [
    { id: 1, name: 'Living Room', type: 'temperature', value: 22.5, unit: '°C', status: 'active' },
    { id: 2, name: 'Kitchen', type: 'humidity', value: 45, unit: '%', status: 'active' },
    { id: 3, name: 'Bedroom', type: 'air_quality', value: 85, unit: 'AQI', status: 'warning' },
    { id: 4, name: 'Garden', type: 'soil_moisture', value: 72, unit: '%', status: 'active' }
  ];

  const carbonBreakdown = [
    { name: 'Transportation', value: 35, color: '#ff6b6b' },
    { name: 'Energy', value: 28, color: '#4ecdc4' },
    { name: 'Food', value: 20, color: '#45b7d1' },
    { name: 'Waste', value: 17, color: '#96ceb4' }
  ];

  const solutions = [
    {
      title: 'Solar Panel Installation',
      impact: '40% energy reduction',
      cost: '$15,000 - $25,000',
      description: 'Install residential solar panels to reduce grid dependency and carbon footprint.',
      icon: <Zap className="w-6 h-6" />
    },
    {
      title: 'Electric Vehicle',
      impact: '60% transport emissions cut',
      cost: '$30,000 - $60,000',
      description: 'Switch to electric vehicle to eliminate gasoline consumption.',
      icon: <TrendingDown className="w-6 h-6" />
    },
    {
      title: 'Smart Home System',
      impact: '25% energy savings',
      cost: '$2,000 - $5,000',
      description: 'Implement smart thermostats and energy monitoring systems.',
      icon: <Wifi className="w-6 h-6" />
    }
  ];

  const [loginData, setLoginData] = useState({
    username: '',
    password: ''
  });
  const [isLogin, setIsLogin] = useState(true);

  const handleLogin = async (e) => {
    e.preventDefault();
    
    try {
      const response = await fetch('http://localhost:5000/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: loginData.username,
          password: loginData.password
        })
      });

      const data = await response.json();
      
      if (response.ok) {
        localStorage.setItem('token', data.token);
        setUser(data.user);
        setAuthMethod('email');
        setIsAuthenticated(true);
        setShowLogin(false);
        setLoginData({ username: '', password: '' });
      } else {
        alert(data.error || 'Login failed');
      }
    } catch (error) {
      console.error('Login error:', error);
      if (error.name === 'TypeError' && error.message.includes('fetch')) {
        alert('Cannot connect to server. Please check if backend is running on port 5000.');
      } else {
        alert('Network error. Please try again.');
      }
    }
  };

  const handleDemoLogin = () => {
    setIsAuthenticated(true);
    setShowLogin(false);
    setAuthMethod('demo');
    setUser({
      name: 'Demo User',
      email: 'demo@ecoatlas.ai',
      provider: 'demo'
    });
  };

  const [signupData, setSignupData] = useState({
    username: '',
    email: '',
    realName: '',
    password: '',
    confirmPassword: ''
  });
  const [showVerification, setShowVerification] = useState(false);
  const [verificationCode, setVerificationCode] = useState('');
  const [signupEmail, setSignupEmail] = useState('');

  const handleSignup = async (e) => {
    e.preventDefault();
    
    // Basic validation
    if (signupData.password !== signupData.confirmPassword) {
      alert('Passwords do not match');
      return;
    }
    
    if (signupData.password.length < 8) {
      alert('Password must be at least 8 characters long');
      return;
    }

    try {
      const response = await fetch('http://localhost:5000/api/auth/signup', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: signupData.username,
          email: signupData.email,
          realName: signupData.realName,
          password: signupData.password
        })
      });

      const data = await response.json();
      
      if (response.ok) {
        setSignupEmail(signupData.email);
        setShowVerification(true);
        alert('Account created! Please check your email for verification code.');
      } else {
        alert(data.error || 'Signup failed');
      }
    } catch (error) {
      console.error('Signup error:', error);
      alert('Network error. Please try again.');
    }
  };

  const handleVerification = async (e) => {
    e.preventDefault();
    
    try {
      const response = await fetch('http://localhost:5000/api/auth/verify', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: signupEmail,
          verificationCode: verificationCode
        })
      });

      const data = await response.json();
      
      if (response.ok) {
        alert('Account verified successfully! You can now log in.');
        setShowVerification(false);
        setIsLogin(true);
        setSignupData({
          username: '',
          email: '',
          realName: '',
          password: '',
          confirmPassword: ''
        });
        setVerificationCode('');
      } else {
        alert(data.error || 'Verification failed');
      }
    } catch (error) {
      console.error('Verification error:', error);
      alert('Network error. Please try again.');
    }
  };

  const handleGoogleSignIn = (userData) => {
    console.log('Google Sign-In successful:', userData);
    setUser(userData.user);
    setAuthMethod('google');
    setIsAuthenticated(true);
    setShowLogin(false);
    
    // User data is already stored in AuthContext
  };

  const handleGoogleSignInError = (error) => {
    console.error('Google Sign-In error:', error);
    // You can show a toast notification here
  };

  const handleLogout = () => {
    setUser(null);
    setAuthMethod('demo');
    setIsAuthenticated(false);
    setShowLogin(true);
    localStorage.removeItem('ecoatlas_user');
    
    // Sign out from Google if using Google auth
    if (typeof window.google !== 'undefined' && window.google.accounts && window.google.accounts.id) {
      window.google.accounts.id.disableAutoSelect();
    }
  };

  // Restore user session from localStorage on app load
  useEffect(() => {
    const savedUser = localStorage.getItem('ecoatlas_user');
    if (savedUser) {
      try {
        const userData = JSON.parse(savedUser);
        setUser(userData);
        setAuthMethod(userData.provider || 'demo');
        setIsAuthenticated(true);
        setShowLogin(false);
      } catch (error) {
        console.error('Error parsing saved user data:', error);
        localStorage.removeItem('ecoatlas_user');
      }
    }
  }, []);

  const sendMessage = (e) => {
    if (e) e.preventDefault(); // Prevent form submission
    if (currentMessage.trim()) {
      const newMessage = { text: currentMessage, sender: 'user' };
      setChatMessages([...chatMessages, newMessage]);
      
      // Smart AI response based on user input and context
      setTimeout(() => {
        const userInput = currentMessage.toLowerCase();
        let response = generateSmartAIResponse(userInput, chatMessages, entries, scopeTotals);
        const aiResponse = { text: response, sender: 'ai' };
        setChatMessages(prev => [...prev, aiResponse]);
      }, 1000);
      
      setCurrentMessage('');
    }
  };

  const generateSmartAIResponse = (userInput, messageHistory, emissionData, scopeData) => {
    // Context-aware responses based on user's actual data
    const totalEmissions = scopeData ? Object.values(scopeData).reduce((sum, val) => sum + val, 0) : 0;
    const hasRecentData = emissionData && emissionData.length > 0;
    const lastEntry = hasRecentData ? emissionData[emissionData.length - 1] : null;
    
    // Greeting responses
    if (userInput.includes('hello') || userInput.includes('hi') || userInput.includes('hey')) {
      return `Hello! I'm your EcoAtlas AI assistant. I can see you have ${hasRecentData ? `${emissionData.length} carbon entries` : 'no carbon data yet'}. How can I help you with your sustainability journey today?`;
    }
    
    // Carbon footprint analysis
    if (userInput.includes('carbon') || userInput.includes('footprint') || userInput.includes('emission')) {
      if (hasRecentData) {
        const avgDaily = totalEmissions / emissionData.length;
        const highestCategory = scopeData ? Object.entries(scopeData).reduce((a, b) => scopeData[a[0]] > scopeData[b[0]] ? a : b)[0] : 'energy';
        return `Your current carbon footprint shows ${totalEmissions.toFixed(2)} kg CO2 total. Your highest impact category is ${highestCategory} (${scopeData[highestCategory]?.toFixed(2)} kg CO2). I recommend focusing on reducing ${highestCategory} emissions first for maximum impact.`;
      }
      return "I can help you calculate and track your carbon footprint! Start by adding entries in the Tracker tab. I'll analyze your data and provide personalized recommendations for reducing emissions.";
    }
    
    // Calculator help
    if (userInput.includes('calculator') || userInput.includes('calculate') || userInput.includes('how to')) {
      return "Our carbon calculator uses verified emission factors to calculate your footprint. In the Tracker tab, select a category (Energy, Transportation, Waste, Industrial), enter your activity data, and I'll automatically calculate the CO2 emissions. Each category has specific units and factors for accuracy.";
    }
    
    // Data insights
    if (userInput.includes('data') || userInput.includes('insight') || userInput.includes('analysis')) {
      if (hasRecentData) {
        const recentTrend = emissionData.length > 1 ? 
          (emissionData[emissionData.length - 1].emissions - emissionData[0].emissions) : 0;
        const trendText = recentTrend > 0 ? 'increasing' : recentTrend < 0 ? 'decreasing' : 'stable';
        return `Your emission trend is ${trendText}. ${recentTrend > 0 ? 'Consider focusing on high-impact reduction strategies.' : recentTrend < 0 ? 'Great job on reducing emissions! Keep up the good work.' : 'Try setting specific reduction goals to see progress.'}`;
      }
      return "I can provide detailed insights once you start tracking your carbon data. Add some entries in the Tracker tab, and I'll analyze patterns, trends, and opportunities for improvement.";
    }
    
    // Reduction strategies
    if (userInput.includes('reduce') || userInput.includes('improve') || userInput.includes('better')) {
      const strategies = [
        "Switch to LED bulbs - saves 80% energy and lasts 25x longer",
        "Use public transport or carpool - reduces transportation emissions by 50-70%",
        "Set thermostat 2°F lower in winter, 2°F higher in summer",
        "Unplug electronics when not in use - saves 5-10% on energy bills",
        "Eat less meat - plant-based meals have 50% lower carbon footprint"
      ];
      return `Here are my top reduction strategies: ${strategies[Math.floor(Math.random() * strategies.length)]}. Would you like me to suggest more specific actions based on your current data?`;
    }
    
    // IoT and monitoring
    if (userInput.includes('iot') || userInput.includes('sensor') || userInput.includes('monitor')) {
      return "IoT sensors provide real-time environmental monitoring! Connect ESP32 devices to track energy usage, temperature, air quality, and more. This gives you precise data for accurate carbon calculations and helps identify energy waste patterns.";
    }
    
    // Goals and targets
    if (userInput.includes('goal') || userInput.includes('target') || userInput.includes('achieve')) {
      if (hasRecentData) {
        const suggestedTarget = Math.round(totalEmissions * 0.8); // 20% reduction
        return `Based on your current ${totalEmissions.toFixed(2)} kg CO2, I suggest setting a goal to reduce to ${suggestedTarget} kg CO2 (20% reduction). This is achievable through focused efforts on your highest-impact categories.`;
      }
      return "Set SMART goals: Specific, Measurable, Achievable, Relevant, Time-bound. Start with a 10-20% reduction target and track progress weekly. I can help you create a personalized action plan!";
    }
    
    // Export and reporting
    if (userInput.includes('export') || userInput.includes('report') || userInput.includes('download')) {
      return "You can export your carbon data as CSV from the Tracker tab. This includes all entries, calculations, and trends. Perfect for sustainability reporting, sharing with teams, or external analysis. The data is yours to use however you need!";
    }
    
    // Technical questions
    if (userInput.includes('how') || userInput.includes('what') || userInput.includes('why')) {
      return "I'm here to explain everything! Whether it's emission factors, calculation methods, data interpretation, or sustainability concepts - just ask. I can break down complex topics into simple, actionable insights.";
    }
    
    // Personalization based on recent activity
    if (lastEntry) {
      const category = lastEntry.category;
      const amount = lastEntry.amount;
      const emissions = lastEntry.emissions;
      
      if (userInput.includes('recent') || userInput.includes('last')) {
        return `Your most recent entry was ${amount} ${lastEntry.unit} of ${category}, generating ${emissions.toFixed(2)} kg CO2. ${emissions > 5 ? 'This is a high-impact activity - consider alternatives or reduction strategies.' : 'This is a relatively low-impact activity. Good choice!'}`;
      }
    }
    
    // Default intelligent response
    const defaultResponses = [
      "I'm analyzing your carbon data to provide personalized insights. What specific aspect of sustainability would you like to explore?",
      "Based on your current footprint, I can suggest targeted reduction strategies. What area interests you most - energy, transportation, or waste?",
      "I'm here to help you understand and reduce your environmental impact. Ask me about calculations, strategies, or how to use our tools effectively.",
      "Let's work together to optimize your carbon footprint! I can provide data-driven recommendations based on your tracking history."
    ];
    
    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];
  };

  const sendSupportMessage = (e) => {
    if (e) e.preventDefault(); // Prevent form submission
    if (!supportMessage.trim()) return;

    const newMessage = { 
      id: supportMessages.length + 1,
      text: supportMessage, 
      sender: 'user',
      timestamp: new Date().toLocaleTimeString()
    };
    setSupportMessages([...supportMessages, newMessage]);
    setSupportMessage('');
    
    // Smart support response based on user input and context
    setTimeout(() => {
      const userInput = supportMessage.toLowerCase();
      let response = generateSmartSupportResponse(userInput, supportMessages, entries, scopeTotals);
      
      const supportResponse = { 
        id: supportMessages.length + 2,
        text: response, 
        sender: 'support',
        timestamp: new Date().toLocaleTimeString()
      };
      
      setSupportMessages(prev => [...prev, supportResponse]);
    }, 800);
  };

  const generateSmartSupportResponse = (userInput, messageHistory, emissionData, scopeData) => {
    // Context-aware support responses
    const totalEmissions = scopeData ? Object.values(scopeData).reduce((sum, val) => sum + val, 0) : 0;
    const hasRecentData = emissionData && emissionData.length > 0;
    const lastEntry = hasRecentData ? emissionData[emissionData.length - 1] : null;
    
    // Greeting and introduction
    if (userInput.includes('hello') || userInput.includes('hi') || userInput.includes('hey')) {
      return `Hello! I'm your EcoAtlas support specialist. I can see you have ${hasRecentData ? `${emissionData.length} carbon entries` : 'no carbon data yet'}. How can I help you with your sustainability journey today?`;
    }
    
    // Carbon footprint and emissions
    if (userInput.includes('carbon') || userInput.includes('emission') || userInput.includes('footprint') || userInput.includes('co2')) {
      if (hasRecentData) {
        const highestCategory = scopeData ? Object.entries(scopeData).reduce((a, b) => scopeData[a[0]] > scopeData[b[0]] ? a : b)[0] : 'energy';
        return `Your current carbon footprint is ${totalEmissions.toFixed(2)} kg CO2. Your highest impact area is ${highestCategory} (${scopeData[highestCategory]?.toFixed(2)} kg CO2). I recommend focusing on ${highestCategory} reduction strategies first. Would you like specific tips for reducing ${highestCategory} emissions?`;
      }
      return "Your carbon footprint is the total amount of greenhouse gases you produce, measured in CO₂ equivalent. Our platform uses verified emission factors to calculate your footprint across Energy, Transportation, Waste, and Industrial categories. Start by adding activities in the Tracker tab!";
    }
    
    // Tracking and calculations
    if (userInput.includes('track') || userInput.includes('measure') || userInput.includes('calculate') || userInput.includes('how to')) {
      return "You can track emissions using our Tracker tab - just enter your activities like driving, energy use, or flights. Our IoT Sensors can also automatically monitor your home energy consumption in real-time. Each entry is calculated using industry-standard emission factors for accuracy.";
    }
    
    // Scope explanations
    if (userInput.includes('scope') || userInput.includes('ghg protocol') || userInput.includes('protocol')) {
      return "Scope 1 = direct emissions (your car, heating), Scope 2 = electricity you buy, Scope 3 = everything else (flights, food, waste). Use our Carbon Calculator to track all three scopes properly. This follows the GHG Protocol standard for comprehensive carbon accounting.";
    }
    
    // Data analysis and insights
    if (userInput.includes('data') || userInput.includes('insight') || userInput.includes('analysis') || userInput.includes('trend')) {
      if (hasRecentData) {
        const recentTrend = emissionData.length > 1 ? 
          (emissionData[emissionData.length - 1].emissions - emissionData[0].emissions) : 0;
        const trendText = recentTrend > 0 ? 'increasing' : recentTrend < 0 ? 'decreasing' : 'stable';
        return `Your emission trend is ${trendText}. ${recentTrend > 0 ? 'I recommend focusing on high-impact reduction strategies. Let me suggest some specific actions based on your data.' : recentTrend < 0 ? 'Excellent progress! You\'re successfully reducing emissions. Keep up the great work!' : 'Consider setting specific reduction goals to see measurable progress.'} Would you like me to analyze your data further?`;
      }
      return "I can provide detailed data analysis once you start tracking. Add some entries in the Tracker tab, and I'll analyze patterns, identify trends, and suggest optimization opportunities. The more data you have, the better insights I can provide!";
    }
    
    // Reduction strategies and tips
    if (userInput.includes('reduce') || userInput.includes('lower') || userInput.includes('improve') || userInput.includes('tip') || userInput.includes('advice')) {
      const strategies = [
        "Switch to LED bulbs - saves 80% energy and lasts 25x longer than incandescent",
        "Use public transport or carpool - reduces transportation emissions by 50-70%",
        "Set thermostat 2°F lower in winter, 2°F higher in summer - saves 5-10% on energy bills",
        "Unplug electronics when not in use - saves 5-10% on energy bills",
        "Eat less meat - plant-based meals have 50% lower carbon footprint",
        "Use a programmable thermostat - can save 10-15% on heating and cooling",
        "Wash clothes in cold water - saves 90% of the energy used for washing",
        "Install low-flow showerheads - reduces water heating energy by 25-60%"
      ];
      const randomStrategy = strategies[Math.floor(Math.random() * strategies.length)];
      return `Here's a proven reduction strategy: ${randomStrategy}. Check our Solutions tab for personalized strategies! Also visit AI Advisor for smart recommendations based on your data. Would you like me to suggest more specific actions?`;
    }
    
    // IoT and monitoring systems
    if (userInput.includes('iot') || userInput.includes('sensor') || userInput.includes('esp32') || userInput.includes('monitor') || userInput.includes('device')) {
      return "Our IoT Sensors tab shows your real-time environmental monitoring. Connect ESP32 devices to track energy, temperature, and air quality automatically. Much easier than manual logging! I can guide you through device setup and data integration.";
    }
    
    // Goals and target setting
    if (userInput.includes('goal') || userInput.includes('target') || userInput.includes('achievement') || userInput.includes('plan')) {
      if (hasRecentData) {
        const suggestedTarget = Math.round(totalEmissions * 0.8); // 20% reduction
        return `Based on your current ${totalEmissions.toFixed(2)} kg CO2, I suggest setting a goal to reduce to ${suggestedTarget} kg CO2 (20% reduction). Set and track carbon reduction goals in our Goals tab. You'll earn EcoPoints and badges as you hit milestones!`;
      }
      return "Set SMART goals: Specific, Measurable, Achievable, Relevant, Time-bound. Start with a 10-20% reduction target and track progress weekly. The AI helps you stay on track with weekly action plans.";
    }
    
    // Reports and data export
    if (userInput.includes('report') || userInput.includes('data') || userInput.includes('export') || userInput.includes('csv') || userInput.includes('pdf')) {
      return "Generate detailed reports in the Reports tab. Export your data as PDF or CSV. Great for sharing progress with colleagues or for compliance reporting. The data is yours to use however you need!";
    }
    
    // Community and collaboration
    if (userInput.includes('community') || userInput.includes('challenge') || userInput.includes('compete') || userInput.includes('share')) {
      return "Join our Community tab to connect with other eco-warriors! Participate in global challenges, share tips, and compare progress. It's more fun when we do it together. You can also share your success stories and learn from others' experiences.";
    }
    
      // Marketplace and offsets
    if (userInput.includes('offset') || userInput.includes('buy') || userInput.includes('solar') || userInput.includes('marketplace') || userInput.includes('purchase')) {
      return "Browse our Marketplace for carbon offsets, solar panels, and eco-friendly services. All providers are verified. You can also calculate offset costs directly in the platform. I can help you choose the right offsets for your situation.";
      }
    
      // Account and settings
    if (userInput.includes('account') || userInput.includes('setting') || userInput.includes('profile') || userInput.includes('preference')) {
      return "Manage your preferences in Settings. Change units, notification frequency, privacy controls, and connect new devices. Your data is always secure and private. I can guide you through any specific settings you'd like to adjust.";
    }
    
    // Integration and connectivity
    if (userInput.includes('connect') || userInput.includes('integration') || userInput.includes('sync') || userInput.includes('api') || userInput.includes('link')) {
      return "Connect smart devices through our Integrations tab. We support Tesla, Nest, Apple Health, and 40+ other platforms. API access available for custom integrations too. I can help you set up specific integrations or troubleshoot connection issues.";
    }
    
    // Technical support
    if (userInput.includes('problem') || userInput.includes('issue') || userInput.includes('error') || userInput.includes('bug') || userInput.includes('fix')) {
      return "I'm here to help troubleshoot any issues! Describe the problem you're experiencing, and I'll provide step-by-step solutions. Common issues include data not saving, calculations not working, or integration problems. What specific issue are you facing?";
    }
    
      // Non-carbon related questions - redirect
    if (userInput.includes('weather') || userInput.includes('news') || userInput.includes('recipe') || userInput.includes('movie') || userInput.includes('game') || userInput.includes('sports')) {
      return "I'm specifically designed to help with carbon footprint and sustainability questions. Let's focus on helping you reduce emissions! What would you like to know about tracking or reducing your carbon footprint?";
    }
    
    // General help and getting started
    if (userInput.includes('help') || userInput.includes('how') || userInput.includes('start') || userInput.includes('begin')) {
      return "Great! Here's how to get started: 1) Use the Dashboard to see your current footprint, 2) Add entries in the Tracker to log activities, 3) Check the AI Advisor for personalized tips, 4) Set goals to track progress. Which area would you like to explore first?";
    }
    
    // Personalization based on recent activity
    if (lastEntry) {
      const category = lastEntry.category;
      const amount = lastEntry.amount;
      const emissions = lastEntry.emissions;
      
      if (userInput.includes('recent') || userInput.includes('last') || userInput.includes('latest')) {
        return `Your most recent entry was ${amount} ${lastEntry.unit} of ${category}, generating ${emissions.toFixed(2)} kg CO2. ${emissions > 5 ? 'This is a high-impact activity - I can suggest alternatives or reduction strategies.' : 'This is a relatively low-impact activity. Good choice!'} Would you like me to analyze this entry further?`;
      }
    }
    
    // Default intelligent response
    const defaultResponses = [
      "I'm analyzing your carbon data to provide personalized support. What specific aspect of sustainability would you like help with?",
      "Based on your current footprint, I can suggest targeted solutions. What area interests you most - energy, transportation, waste, or goals?",
      "I'm here to help you succeed with your sustainability goals. Ask me about calculations, strategies, troubleshooting, or how to use our tools effectively.",
      "Let's work together to optimize your carbon footprint! I can provide data-driven solutions based on your tracking history and specific needs."
    ];
    
    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];
  };

  const AuthModal = ({ isLogin, setIsLogin }) => {
    if (showVerification) {
      return (
        <div className="fixed inset-0 flex items-center justify-center z-50" style={{background: 'rgba(0,0,0,0.5)'}}>
          <div className="w-96 max-w-90vw rounded-3xl overflow-hidden shadow-2xl" style={{boxShadow: '0 20px 40px rgba(0,0,0,0.3)'}}>
            <div className="bg-gradient-to-r from-emerald-600 to-teal-600 p-6 text-white rounded-t-3xl">
              <div className="flex items-center justify-center">
                <div className="w-10 h-10 bg-white rounded-2xl flex items-center justify-center mr-3">
                  <EcoAtlasLogo className="w-8 h-8" />
                </div>
                <div>
                  <div className="text-2xl font-bold">Verify Your Account</div>
                  <div className="text-sm opacity-90">Check your email for verification code</div>
                </div>
              </div>
            </div>
            
            <div className="bg-white p-6 rounded-b-3xl">
              <form onSubmit={handleVerification} className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Verification Code
                  </label>
                  <input
                    type="text"
                    value={verificationCode}
                    onChange={(e) => setVerificationCode(e.target.value)}
                    placeholder="Enter 6-digit code"
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    required
                  />
                </div>
                
                <button
                  type="submit"
                  className="w-full bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-3 px-6 rounded-2xl font-bold text-sm hover:from-emerald-700 hover:to-teal-700 transition-all duration-200"
                >
                  Verify Account
                </button>
                
                <button
                  type="button"
                  onClick={() => setShowVerification(false)}
                  className="w-full text-emerald-600 hover:text-emerald-700 font-medium text-sm py-2"
                >
                  Back to Signup
                </button>
              </form>
            </div>
          </div>
        </div>
      );
    }

    return (
      <div className="fixed inset-0 flex items-center justify-center z-50" style={{background: 'rgba(0,0,0,0.5)'}}>
        <div className="w-96 max-w-90vw rounded-3xl overflow-hidden shadow-2xl" style={{boxShadow: '0 20px 40px rgba(0,0,0,0.3)'}}>
          <div className="bg-gradient-to-r from-emerald-600 to-teal-600 p-6 text-white rounded-t-3xl">
            <div className="flex items-center justify-center">
              <div className="w-10 h-10 bg-white rounded-2xl flex items-center justify-center mr-3">
                <EcoAtlasLogo className="w-8 h-8" />
              </div>
              <div>
                <div className="text-2xl font-bold">EcoAtlas AI</div>
                <div className="text-sm opacity-90">Your carbon companion</div>
              </div>
            </div>
          </div>
          
          <div className="bg-white p-6 rounded-b-3xl">
            <div className="text-center mb-6">
              <h2 className="text-2xl font-bold text-gray-900 mb-2">
                {isLogin ? 'Welcome Back!' : 'Join EcoAtlas'}
              </h2>
              <p className="text-sm text-gray-600">
                {isLogin ? 'Track and reduce your footprint with ease' : 'Start your sustainability journey today'}
              </p>
            </div>
            
            <div className="max-w-sm mx-auto space-y-4">
              {/* Google Sign-In */}
              <div className="space-y-3">
                <GoogleSignIn 
                  onSuccess={handleGoogleSignIn}
                  onError={handleGoogleSignInError}
                />
                
                <div className="relative">
                  <div className="absolute inset-0 flex items-center">
                    <div className="w-full border-t border-gray-300" />
                  </div>
                  <div className="relative flex justify-center text-sm">
                    <span className="px-2 bg-white text-gray-500">Or continue with email</span>
                  </div>
                </div>
              </div>
              
              {/* Email Login/Signup Form */}
              <form onSubmit={isLogin ? handleLogin : handleSignup} className="space-y-4">
                {!isLogin && (
                  <>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        Full Name
                      </label>
                      <input
                        type="text"
                        value={signupData.realName}
                        onChange={(e) => setSignupData({...signupData, realName: e.target.value})}
                        placeholder="Enter your full name"
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                        required
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        Email
                      </label>
                      <input
                        type="email"
                        value={signupData.email}
                        onChange={(e) => setSignupData({...signupData, email: e.target.value})}
                        placeholder="Enter your email"
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                        required
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        Username
                      </label>
                      <input
                        type="text"
                        value={signupData.username}
                        onChange={(e) => setSignupData({...signupData, username: e.target.value})}
                        placeholder="Choose a username"
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                        required
                      />
                    </div>
                  </>
                )}
                
                {isLogin && (
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Username or Email
                    </label>
                    <input
                      type="text"
                      value={loginData.username}
                      onChange={(e) => setLoginData({...loginData, username: e.target.value})}
                      placeholder="Enter username or email"
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                      required
                    />
                  </div>
                )}
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Password
                  </label>
                  <input
                    type="password"
                    value={isLogin ? loginData.password : signupData.password}
                    onChange={(e) => isLogin 
                      ? setLoginData({...loginData, password: e.target.value})
                      : setSignupData({...signupData, password: e.target.value})
                    }
                    placeholder="Enter your password"
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    required
                  />
                </div>
                
                {!isLogin && (
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Confirm Password
                    </label>
                    <input
                      type="password"
                      value={signupData.confirmPassword}
                      onChange={(e) => setSignupData({...signupData, confirmPassword: e.target.value})}
                      placeholder="Confirm your password"
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                      required
                    />
                  </div>
                )}
                
                <button
                  type="submit"
                  className="w-full bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-3 px-6 rounded-2xl font-bold text-sm hover:from-emerald-700 hover:to-teal-700 transition-all duration-200 transform hover:scale-105"
                >
                  {isLogin ? 'Sign In' : 'Create Account'}
                </button>
              </form>
              
              {/* Demo Login */}
              <div className="relative">
                <div className="absolute inset-0 flex items-center">
                  <div className="w-full border-t border-gray-300" />
                </div>
                <div className="relative flex justify-center text-sm">
                  <span className="px-2 bg-white text-gray-500">Or try demo</span>
                </div>
              </div>
              
              <button
                onClick={handleDemoLogin}
                className="w-full bg-gray-100 text-gray-700 py-3 px-6 rounded-2xl font-bold text-sm hover:bg-gray-200 transition-all duration-200"
              >
                Demo Account
              </button>
              
              <div className="text-center">
                <p className="text-xs text-gray-500">
                  Demo account for testing features
                </p>
              </div>
            </div>
            
            <div className="mt-6 text-center">
              <button
                onClick={() => setIsLogin(!isLogin)}
                className="text-emerald-600 hover:text-emerald-700 font-medium text-sm border border-emerald-600 px-4 py-2 rounded-2xl hover:bg-emerald-50 transition-all duration-200"
              >
                {isLogin ? "Don't have an account? Sign up" : "Already have an account? Sign in"}
              </button>
            </div>
            
            {/* Compact features for sign up */}
            {!isLogin && (
              <div className="mt-4 p-3 bg-emerald-50 rounded-2xl border border-emerald-200">
                <div className="text-xs font-medium text-gray-700 text-center">
                  Get real-time tracking, AI insights & IoT integration
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    );
  };

  const Dashboard = () => {
    const { isDarkMode } = useTheme();
    
    return (
      <div className="space-y-6">
        {/* Hero Stats Section */}
        <div className="bg-gradient-to-r from-emerald-500 via-teal-500 to-cyan-500 p-8 rounded-2xl text-white relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-green-600/20 to-blue-600/20"></div>
        <div className="absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32"></div>
        <div className="absolute bottom-0 left-0 w-48 h-48 bg-white/10 rounded-full translate-y-24 -translate-x-24"></div>
        
        <div className="relative z-10">
          <div className="flex items-center justify-between mb-6">
            <div>
              <h2 className="text-3xl font-bold mb-2">Good morning, {user?.realName || user?.name || 'User'}! 🌱</h2>
              <p className="text-lg opacity-90">You're on track to save 2.3 tons CO₂ this year</p>
            </div>
            <div className="text-right">
              <div className="bg-white/20 backdrop-blur-sm rounded-xl p-4">
                <div className="text-2xl font-bold">85%</div>
                <div className="text-sm opacity-90">Goal Progress</div>
              </div>
            </div>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div className="bg-white/15 backdrop-blur-sm rounded-xl p-4 border border-white/20 hover-lift animate-fadeInUp">
              <div className="flex items-center justify-between mb-2">
                <Leaf className="w-8 h-8 text-green-200 animate-float" />
                <div className="w-2 h-2 bg-green-300 rounded-full animate-pulse"></div>
              </div>
              <div className="text-2xl font-bold text-shadow">2.4 kg</div>
              <div className="text-sm opacity-90">Today's CO₂</div>
              <div className="text-xs opacity-75 flex items-center mt-1">
                <TrendingDown className="w-3 h-3 mr-1" />
                12% vs yesterday
              </div>
            </div>
            
            <div className="bg-white/15 backdrop-blur-sm rounded-xl p-4 border border-white/20 hover-lift animate-fadeInUp" style={{animationDelay: '0.1s'}}>
              <div className="flex items-center justify-between mb-2">
                <Target className="w-8 h-8 text-blue-200 animate-float" style={{animationDelay: '0.5s'}} />
                <div className="w-2 h-2 bg-blue-300 rounded-full animate-pulse"></div>
              </div>
              <div className="text-2xl font-bold text-shadow">16.8 kg</div>
              <div className="text-sm opacity-90">This Week</div>
              <div className="text-xs opacity-75">Target: 15 kg</div>
            </div>
            
            <div className="bg-white/15 backdrop-blur-sm rounded-xl p-4 border border-white/20 hover-lift animate-fadeInUp" style={{animationDelay: '0.2s'}}>
              <div className="flex items-center justify-between mb-2">
                <Calendar className="w-8 h-8 text-purple-200 animate-float" style={{animationDelay: '1s'}} />
                <div className="w-2 h-2 bg-purple-300 rounded-full animate-pulse"></div>
              </div>
              <div className="text-2xl font-bold text-shadow">68.2 kg</div>
              <div className="text-sm opacity-90">This Month</div>
              <div className="text-xs opacity-75 flex items-center mt-1">
                <TrendingDown className="w-3 h-3 mr-1" />
                8% improvement
              </div>
            </div>
            
            <div className="bg-white/15 backdrop-blur-sm rounded-xl p-4 border border-white/20 hover-lift animate-fadeInUp" style={{animationDelay: '0.3s'}}>
              <div className="flex items-center justify-between mb-2">
                <Award className="w-8 h-8 text-yellow-200 animate-float" style={{animationDelay: '1.5s'}} />
                <div className="w-2 h-2 bg-yellow-300 rounded-full animate-pulse"></div>
              </div>
              <div className="text-2xl font-bold text-shadow">2,450</div>
              <div className="text-sm opacity-90">EcoPoints</div>
              <div className="text-xs opacity-75">+125 this week</div>
            </div>
          </div>
        </div>
      </div>

      {/* Main Analytics Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Carbon Trend Chart */}
        <div className={`lg:col-span-2 chart-container animate-fadeInScale ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`}>
          <h3 className={`text-lg font-semibold mb-4 transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>📈 Carbon Footprint Trend</h3>
          <ResponsiveContainer width="100%" height={300}>
            <LineChart data={dashboardData}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="name" />
              <YAxis />
              <Tooltip />
              <Line type="monotone" dataKey="carbon" stroke="#10b981" strokeWidth={2} />
              <Line type="monotone" dataKey="target" stroke="#ef4444" strokeDasharray="5 5" />
            </LineChart>
          </ResponsiveContainer>
        </div>

        {/* Carbon Sources Breakdown */}
        <div className={`chart-container animate-fadeInScale ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`} style={{animationDelay: '0.2s'}}>
          <h3 className={`text-lg font-semibold mb-4 transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>🥧 Sources Breakdown</h3>
          <ResponsiveContainer width="100%" height={200}>
            <PieChart>
              <Pie
                data={carbonBreakdown}
                cx="50%"
                cy="50%"
                innerRadius={50}
                outerRadius={80}
                paddingAngle={2}
                dataKey="value"
              >
                {carbonBreakdown.map((entry, index) => (
                  <Cell key={`cell-${index}`} fill={entry.color} />
                ))}
              </Pie>
              <Tooltip />
            </PieChart>
          </ResponsiveContainer>
          <div className="space-y-2 mt-4">
            {carbonBreakdown.map((item, index) => (
              <div key={index} className="flex items-center justify-between">
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 rounded-full" style={{ backgroundColor: item.color }}></div>
                  <span className={`text-sm transition-colors duration-300 ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>{item.name}</span>
                </div>
                <span className={`text-sm font-bold transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>{item.value}%</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* PDF Report Generation */}
      <div className={`p-6 rounded-xl shadow-sm border transition-colors duration-300 ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`}>
        <div className="flex items-center justify-between mb-4">
          <h3 className={`text-lg font-semibold flex items-center transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>
            <FileText className="w-5 h-5 text-blue-600 mr-2" />
            Generate Reports
          </h3>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button
            onClick={() => {
              try {
                const doc = generateCarbonFootprintReport(entries, scopeTotals, totalEmissions);
                doc.save(`carbon-footprint-report-${new Date().toISOString().slice(0,10)}.pdf`);
              } catch (error) {
                console.error('Error generating PDF report:', error);
                alert('Error generating PDF report. Please try again.');
              }
            }}
            className="flex items-center justify-center space-x-2 p-4 bg-green-50 border border-green-200 rounded-lg hover:bg-green-100 transition-colors"
          >
            <Download className="w-5 h-5 text-green-600" />
            <span className="font-medium text-green-800">Carbon Footprint Report</span>
          </button>
          
          <button
            onClick={() => {
              try {
                const doc = generateIoTSensorReport();
                doc.save(`iot-sensor-report-${new Date().toISOString().slice(0,10)}.pdf`);
              } catch (error) {
                console.error('Error generating PDF:', error);
                alert('Error generating PDF. Please try again.');
              }
            }}
            className="flex items-center justify-center space-x-2 p-4 bg-blue-50 border border-blue-200 rounded-lg hover:bg-blue-100 transition-colors"
          >
            <Download className="w-5 h-5 text-blue-600" />
            <span className="font-medium text-blue-800">IoT Sensor Report</span>
          </button>
          
          <button
            onClick={() => {
              try {
                const doc = generateAIAnalyticsReport();
                doc.save(`ai-analytics-report-${new Date().toISOString().slice(0,10)}.pdf`);
              } catch (error) {
                console.error('Error generating PDF:', error);
                alert('Error generating PDF. Please try again.');
              }
            }}
            className="flex items-center justify-center space-x-2 p-4 bg-purple-50 border border-purple-200 rounded-lg hover:bg-purple-100 transition-colors"
          >
            <Download className="w-5 h-5 text-purple-600" />
            <span className="font-medium text-purple-800">AI Analytics Report</span>
          </button>
        </div>
      </div>
    </div>
    );
  };


  // Rich activity factors, units and scope mapping
  const CATEGORY_ACTIVITIES = {
    transportation: {
      label: 'Transportation',
      scope: 'scope1',
      items: [
        { name: 'Gasoline', unit: 'L', factor: 2.31, scope: 'scope1' },
        { name: 'Diesel', unit: 'L', factor: 2.68, scope: 'scope1' },
        { name: 'Flight (domestic)', unit: 'km', factor: 0.255, scope: 'scope3' },
        { name: 'Train', unit: 'km', factor: 0.041, scope: 'scope3' }
      ]
    },
    energy: {
      label: 'Energy',
      scope: 'scope2',
      items: [
        { name: 'Grid electricity', unit: 'kWh', factor: 0.5, scope: 'scope2' },
        { name: 'Natural gas', unit: 'm³', factor: 1.85, scope: 'scope1' },
        { name: 'Solar energy', unit: 'kWh', factor: 0.05, scope: 'scope2' },
        { name: 'Wind energy', unit: 'kWh', factor: 0.02, scope: 'scope2' }
      ]
    },
    food: {
      label: 'Food',
      scope: 'scope3',
      items: [
        { name: 'Beef', unit: 'kg', factor: 60, scope: 'scope3' },
        { name: 'Chicken', unit: 'kg', factor: 6.1, scope: 'scope3' },
        { name: 'Cheese', unit: 'kg', factor: 21, scope: 'scope3' },
        { name: 'Vegetables', unit: 'kg', factor: 2.0, scope: 'scope3' }
      ]
    },
    waste: {
      label: 'Waste',
      scope: 'scope3',
      items: [
        { name: 'Landfill waste', unit: 'kg', factor: 1.9, scope: 'scope3' }
      ]
    },
    consumption: {
      label: 'Consumption',
      scope: 'scope3',
      items: [
        { name: 'General goods', unit: 'USD', factor: 0.00045, scope: 'scope3' } // approx kg CO₂e per $ spend
      ]
    }
  };

  const CATEGORY_ORDER = ['transportation', 'energy', 'food', 'waste', 'consumption'];
  const CATEGORY_ICONS = { transportation: '🚗', energy: '⚡', food: '🍽️', waste: '🗑️', consumption: '🛍️' };

  const [selectedCategory, setSelectedCategory] = useState('transportation');
  const [selectedActivity, setSelectedActivity] = useState('Gasoline');
  const [entryDate, setEntryDate] = useState(() => new Date().toISOString().slice(0,10));
  const [amount, setAmount] = useState('');
  const [entries, setEntries] = useState([]);
  const [scopeTotals, setScopeTotals] = useState({ scope1: 0, scope2: 0, scope3: 0 });

  const currentCategory = CATEGORY_ACTIVITIES[selectedCategory];
  const currentItem = currentCategory.items.find(i => i.name === selectedActivity) || currentCategory.items[0];

  useEffect(() => {
    setSelectedActivity(currentCategory.items[0].name);
  }, [selectedCategory]);

  // Load persisted entries and totals
  useEffect(() => {
    try {
      const savedEntries = JSON.parse(localStorage.getItem('ea_entries') || '[]');
      if (Array.isArray(savedEntries) && savedEntries.length) {
        setEntries(savedEntries);
        // Recompute totals from saved entries for safety
        const totals = savedEntries.reduce((acc, e) => {
          acc[e.scope] = +(acc[e.scope] + (e.kg || 0)).toFixed(3);
          return acc;
        }, { scope1: 0, scope2: 0, scope3: 0 });
        setScopeTotals(totals);
      }
    } catch {}
  }, []);

  // Persist whenever entries change
  useEffect(() => {
    try { localStorage.setItem('ea_entries', JSON.stringify(entries)); } catch {}
  }, [entries]);

  const addEntry = () => {
    const val = parseFloat(amount);
    if (!val || val <= 0) return;
    const kg = +(val * currentItem.factor).toFixed(3);
    const record = {
      id: Date.now(),
      date: entryDate,
      category: currentCategory.label,
      activity: currentItem.name,
      amount: `${val} ${currentItem.unit}`,
      scope: currentItem.scope,
      kg
    };
    setEntries(prev => [record, ...prev]);
    setScopeTotals(prev => ({
      ...prev,
      [currentItem.scope]: +(prev[currentItem.scope] + kg).toFixed(3)
    }));
    setAmount('');
  };

  const deleteEntry = (id) => {
    setEntries(prev => {
      const next = prev.filter(e => e.id !== id);
      const totals = next.reduce((acc, e) => {
        acc[e.scope] = +(acc[e.scope] + (e.kg || 0)).toFixed(3);
        return acc;
      }, { scope1: 0, scope2: 0, scope3: 0 });
      setScopeTotals(totals);
      return next;
    });
  };

  const clearAllEntries = () => {
    setEntries([]);
    setScopeTotals({ scope1: 0, scope2: 0, scope3: 0 });
    try { localStorage.removeItem('ea_entries'); } catch {}
  };

  const totalEmissions = +(scopeTotals.scope1 + scopeTotals.scope2 + scopeTotals.scope3).toFixed(3);

  // Chart data: sum kg by date
  const chartData = React.useMemo(() => {
    const byDate = entries.reduce((acc, e) => {
      acc[e.date] = (acc[e.date] || 0) + (e.kg || 0);
      return acc;
    }, {});
    return Object.entries(byDate)
      .sort(([a], [b]) => a.localeCompare(b))
      .map(([date, kg]) => ({ date, kg: +kg.toFixed(3) }));
  }, [entries]);

  const exportCsv = () => {
    const header = ['date','category','activity','amount','scope','kg'];
    const rows = entries.map(e => [e.date, e.category, e.activity, e.amount, e.scope, e.kg]);
    const csv = [header, ...rows].map(r => r.join(',')).join('\n');
    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `ecoatlas-entries-${Date.now()}.csv`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  const CarbonCalculator = () => (
    <div className="space-y-6">
      {/* Header summary */}
      <div className="bg-gradient-to-r from-emerald-600 to-blue-600 p-8 rounded-xl text-white relative overflow-hidden">
        <h2 className="text-2xl font-bold mb-2">Carbon Emission Tracker</h2>
        <p className="opacity-90">GHG Protocol compliant tracking with real-time CO₂e calculations</p>
        {/* Pastel header shapes */}
        <div className="absolute -translate-y-32 translate-x-32 right-0 top-0 w-64 h-64 bg-white/10 rounded-full"></div>
        <div className="absolute translate-y-24 -translate-x-24 left-0 bottom-0 w-48 h-48 bg-white/10 rounded-full"></div>

        <div className="absolute top-0 right-0 bg-white/15 rounded-lg p-4 text-right">
          <div className="text-sm opacity-90">Total CO₂e Tracked</div>
          <div className="text-3xl font-bold">{totalEmissions.toFixed(2)} kg</div>
      </div>
        <div className="mt-6 space-y-3">
          <div className="bg-white/15 p-4 rounded-lg"><div className="text-sm opacity-90">Scope 1 (Direct)</div><div className="text-2xl font-bold">{scopeTotals.scope1.toFixed(2)} kg</div></div>
          <div className="bg-white/15 p-4 rounded-lg"><div className="text-sm opacity-90">Scope 2 (Energy)</div><div className="text-2xl font-bold">{scopeTotals.scope2.toFixed(2)} kg</div></div>
          <div className="bg-white/15 p-4 rounded-lg"><div className="text-sm opacity-90">Scope 3 (Indirect)</div><div className="text-2xl font-bold">{scopeTotals.scope3.toFixed(2)} kg</div></div>
              </div>
            </div>

      {/* Category selector */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <h3 className="text-lg font-semibold mb-4">Select Emission Category</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {CATEGORY_ORDER.map(key => (
            <button
              key={key}
              onClick={() => setSelectedCategory(key)}
              className={`p-4 rounded-lg border text-left transition-shadow ${selectedCategory === key ? 'glow-active bg-gray-50' : ''} hover:shadow-lg`}
            >
              <div className="flex items-center space-x-2 font-semibold">
                <span>{CATEGORY_ICONS[key]}</span>
                <span>{CATEGORY_ACTIVITIES[key].label}</span>
          </div>
              <div className="text-sm text-gray-600">{CATEGORY_ACTIVITIES[key].items[0].unit} • examples inside</div>
            </button>
        ))}
      </div>
    </div>

      {/* Add entry */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <h3 className="text-lg font-semibold mb-4">Add New Emission Entry</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div>
            <label className="block text-sm font-bold text-gray-700 mb-2">Date</label>
            <input type="date" value={entryDate} onChange={(e)=>setEntryDate(e.target.value)} className="w-full p-3 border border-gray-300 rounded-lg font-bold" />
          </div>
          <div>
            <label className="block text-sm font-bold text-gray-700 mb-2">Activity</label>
            <select value={selectedActivity} onChange={(e)=>setSelectedActivity(e.target.value)} className="w-full p-3 border border-gray-300 rounded-lg font-bold">
              {currentCategory.items.map(i => (
                <option key={i.name} value={i.name}>{i.name} ({i.unit})</option>
              ))}
            </select>
          </div>
          <div>
            <label className="block text-sm font-bold text-gray-700 mb-2">Amount ({currentItem.unit})</label>
            <input type="number" value={amount} onChange={(e)=>setAmount(e.target.value)} placeholder={`Enter amount in ${currentItem.unit}`} className="w-full p-3 border border-gray-300 rounded-lg font-bold" />
          </div>
        </div>
        <div className="mt-6">
          <button onClick={addEntry} className="btn-primary hover-scale">
            Add Entry
        </button>
        </div>
      </div>

      {/* Quick-add chips */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <h3 className="text-lg font-semibold mb-4">Quick Add</h3>
        <div className="space-x-2">
          {currentCategory.items.slice(0,4).map(i => (
            <button key={i.name} className="chip" onClick={()=>{ setSelectedActivity(i.name); setAmount('1'); }}>
              + 1 {i.unit} {i.name}
            </button>
          ))}
          <button className="chip chip-primary" onClick={()=>{ setAmount(''); }}>Clear amount</button>
        </div>
      </div>

      {/* Emissions over time chart */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <h3 className="text-lg font-semibold mb-4">Emissions Over Time</h3>
        {chartData.length === 0 ? (
          <div className="text-center py-8">
            <div className="loading-shimmer w-full h-48 rounded-lg mb-4"></div>
            <div className="text-sm text-gray-600 animate-fadeInUp">No data yet. Add some entries to see your emissions trend!</div>
          </div>
        ) : (
          <div className="animate-fadeInScale">
            <ResponsiveContainer width="100%" height={250}>
              <LineChart data={chartData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="date" />
                <YAxis />
                <Tooltip />
                <Line type="monotone" dataKey="kg" stroke="#16a34a" strokeWidth={2} />
              </LineChart>
            </ResponsiveContainer>
          </div>
        )}
      </div>

      {/* Emission summary */}
      <div className="card-enhanced animate-fadeInUp" style={{animationDelay: '0.4s'}}>
        <h3 className="text-lg font-semibold mb-4">Emission Summary</h3>
        <div className="space-y-2">
          <div className="p-3 rounded-lg border" style={{background:'#fff1f2'}}>
            <div className="flex justify-between text-sm"><span>Scope 1 (Direct)</span><span className="text-red-600">{scopeTotals.scope1.toFixed(2)} kg CO₂e</span></div>
          </div>
          <div className="p-3 rounded-lg border" style={{background:'#fffbeb'}}>
            <div className="flex justify-between text-sm"><span>Scope 2 (Energy)</span><span className="text-yellow-500">{scopeTotals.scope2.toFixed(2)} kg CO₂e</span></div>
          </div>
          <div className="p-3 rounded-lg border" style={{background:'#eef2ff'}}>
            <div className="flex justify-between text-sm"><span>Scope 3 (Indirect)</span><span className="text-blue-600">{scopeTotals.scope3.toFixed(2)} kg CO₂e</span></div>
          </div>
          <div className="p-3 rounded-lg border bg-green-50">
            <div className="flex justify-between font-semibold"><span>Total Emissions</span><span className="text-green-700">{totalEmissions.toFixed(2)} kg CO₂e</span></div>
          </div>
        </div>
      </div>

      {/* Recent entries */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <div className="flex justify-between items-center mb-4">
          <h3 className="text-lg font-semibold">Recent Entries</h3>
          <div className="space-x-2">
            {entries.length > 0 && (
              <>
                <button onClick={exportCsv} className="text-sm px-3 py-2 border rounded-lg">Export CSV</button>
                <button onClick={clearAllEntries} className="text-sm px-3 py-2 border rounded-lg">Clear all</button>
              </>
            )}
          </div>
        </div>
        {entries.length === 0 ? (
          <div className="text-sm text-gray-600">No entries yet.</div>
        ) : (
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="text-left text-gray-600">
                  <th className="p-2">Date</th>
                  <th className="p-2">Category</th>
                  <th className="p-2">Activity</th>
                  <th className="p-2">Amount</th>
                  <th className="p-2">Scope</th>
                  <th className="p-2">kg CO₂e</th>
                  <th className="p-2"></th>
                </tr>
              </thead>
              <tbody>
                {entries.slice(0, 10).map(e => (
                  <tr key={e.id} className="border">
                    <td className="p-2">{e.date}</td>
                    <td className="p-2">{e.category}</td>
                    <td className="p-2">{e.activity}</td>
                    <td className="p-2">{e.amount}</td>
                    <td className="p-2 uppercase">{e.scope}</td>
                    <td className="p-2 font-medium">{e.kg}</td>
                    <td className="p-2 text-right">
                      <button onClick={()=>deleteEntry(e.id)} className="text-sm px-2 py-1 border rounded-lg">Delete</button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </div>

      {/* Factors reference */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <h3 className="text-lg font-semibold mb-4">Emission Factors Reference</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-sm">
          <div>
            <div className="font-semibold mb-2">Transportation (kg CO₂e)</div>
            <ul className="space-y-1">
              <li>• Gasoline: 2.31 per liter</li>
              <li>• Diesel: 2.68 per liter</li>
              <li>• Flight (domestic): 0.255 per km</li>
              <li>• Train: 0.041 per km</li>
            </ul>
          </div>
          <div>
            <div className="font-semibold mb-2">Energy (kg CO₂e)</div>
            <ul className="space-y-1">
              <li>• Grid electricity: 0.5 per kWh</li>
              <li>• Natural gas: 1.85 per m³</li>
              <li>• Solar energy: 0.05 per kWh</li>
              <li>• Wind energy: 0.02 per kWh</li>
            </ul>
          </div>
          <div>
            <div className="font-semibold mb-2">Food (kg CO₂e)</div>
            <ul className="space-y-1">
              <li>• Beef: 60 per kg</li>
              <li>• Chicken: 6.1 per kg</li>
              <li>• Cheese: 21 per kg</li>
              <li>• Vegetables: 2.0 per kg</li>
            </ul>
          </div>
        </div>
        <div className="text-xs text-gray-600 mt-4">* Based on IPCC/EPA/DEFRA references; values vary by region and methodology.</div>
        {/* Unit hints & validation */}
        <div className="mt-3">
          {!amount || parseFloat(amount) <= 0 ? (
            <span className="badge-error">Enter a positive number for amount</span>
          ) : null}
        </div>
      </div>
    </div>
  );

  const CarbonSolutions = () => (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-500 to-blue-600 p-8 rounded-xl text-white">
        <h2 className="text-2xl font-bold mb-2">Carbon Reduction Solutions</h2>
        <p className="opacity-90">Discover effective ways to reduce your carbon footprint</p>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {solutions.map((solution, index) => (
          <div key={index} className="bg-white p-6 rounded-xl shadow-sm border hover:shadow-lg transition-shadow">
            <div className="flex items-center space-x-3 mb-4">
              <div className="p-2 bg-green-100 rounded-lg text-green-600">
                {solution.icon}
              </div>
              <h3 className="text-lg font-semibold">{solution.title}</h3>
            </div>
            <p className="text-gray-600 mb-4">{solution.description}</p>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-sm font-medium text-green-600">Impact:</span>
                <span className="text-sm font-bold">{solution.impact}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm font-medium text-blue-600">Investment:</span>
                <span className="text-sm">{solution.cost}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const ReportsInsights = () => {
    // Sample data for the emissions forecast chart
    const forecastData = [
      { month: 'Jul', actual: 68, forecast: null },
      { month: 'Aug', actual: 65, forecast: null },
      { month: 'Sep', actual: null, forecast: 60 },
      { month: 'Oct', actual: null, forecast: 58 },
      { month: 'Nov', actual: null, forecast: 55 },
      { month: 'Dec', actual: null, forecast: 50 }
    ];

    return (
      <div className="space-y-8">
        {/* Header */}
      <div className="bg-gradient-to-r from-purple-600 to-blue-600 p-8 rounded-xl text-white">
          <h2 className="text-3xl font-bold mb-2">Reports & Insights</h2>
          <p className="text-lg opacity-90">Comprehensive analytics and downloadable reports</p>
      </div>

        {/* Emissions Forecast Chart */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <h3 className="text-2xl font-bold mb-6">Emissions Forecast</h3>
          <div className="h-80">
            <LineChart width={800} height={300} data={forecastData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="month" />
              <YAxis domain={[0, 80]} />
              <Tooltip />
              <Legend />
              <Line 
                type="monotone" 
                dataKey="actual" 
                stroke="#10b981" 
                strokeWidth={3}
                dot={{ fill: '#10b981', strokeWidth: 2, r: 6 }}
                name="Actual Emissions"
              />
              <Line 
                type="monotone" 
                dataKey="forecast" 
                stroke="#3b82f6" 
                strokeWidth={3}
                strokeDasharray="5 5"
                dot={{ fill: '#3b82f6', strokeWidth: 2, r: 6 }}
                name="Forecast"
              />
            </LineChart>
          </div>
          <div className="mt-4 flex items-center justify-center space-x-8">
            <div className="flex items-center space-x-2">
              <div className="w-4 h-0.5 bg-green-500"></div>
              <span className="text-sm text-gray-600">Actual Emissions</span>
            </div>
            <div className="flex items-center space-x-2">
              <div className="w-4 h-0.5 bg-blue-500 border-dashed border-t-2"></div>
              <span className="text-sm text-gray-600">Forecast</span>
            </div>
          </div>
        </div>

        {/* Available Reports */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <h3 className="text-2xl font-bold mb-6">Available Reports</h3>
          <div className="space-y-4">
            
            {/* Carbon Footprint Report */}
            <div className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors">
              <div className="flex items-center space-x-4">
                <div className="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center">
                  <FileText className="w-6 h-6 text-red-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Carbon Footprint Summary - August 2025</h4>
                  <p className="text-sm text-gray-600">2.3 MB • PDF file</p>
                </div>
              </div>
              <button 
                onClick={() => {
                  try {
                    const doc = new jsPDF();
                    doc.text('Carbon Footprint Report', 20, 20);
                    doc.text('Generated: ' + new Date().toLocaleDateString(), 20, 30);
                    doc.text('Total Emissions: 2.3 tons CO₂e', 20, 40);
                    doc.text('Scope 1 (Direct): 0.8 tons', 20, 50);
                    doc.text('Scope 2 (Energy): 1.1 tons', 20, 60);
                    doc.text('Scope 3 (Indirect): 0.4 tons', 20, 70);
                    doc.text('Recommendations:', 20, 85);
                    doc.text('• Reduce transportation emissions by 25%', 20, 95);
                    doc.text('• Switch to renewable energy sources', 20, 105);
                    doc.text('• Implement energy efficiency measures', 20, 115);
                    doc.save('carbon-footprint-report.pdf');
                    alert('PDF downloaded successfully!');
                  } catch (error) {
                    console.error('PDF Error:', error);
                    alert('Error creating PDF. Check console for details.');
                  }
                }}
                className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors hover-scale"
              >
                <Download className="w-5 h-5" />
              </button>
            </div>

            {/* Energy Usage Report */}
            <div className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors">
              <div className="flex items-center space-x-4">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                  <BarChart3 className="w-6 h-6 text-blue-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Energy Usage Analysis - Q2 2025</h4>
                  <p className="text-sm text-gray-600">1.8 MB • PDF file</p>
                </div>
              </div>
              <button 
                onClick={() => {
                  try {
                    const doc = new jsPDF();
                    doc.text('Energy Usage Report', 20, 20);
                    doc.text('Generated: ' + new Date().toLocaleDateString(), 20, 30);
                    doc.text('Total Consumption: 2,847 kWh', 20, 40);
                    doc.text('Peak Hours: 6-9 PM (34%)', 20, 50);
                    doc.text('Efficiency Score: 7.2/10', 20, 60);
                    doc.text('Potential Savings: 18.5%', 20, 70);
                    doc.text('Recommendations:', 20, 85);
                    doc.text('• Install smart thermostat', 20, 95);
                    doc.text('• Upgrade to LED lighting', 20, 105);
                    doc.text('• Consider solar panels', 20, 115);
                    doc.save('energy-usage-report.pdf');
                    alert('PDF downloaded successfully!');
                  } catch (error) {
                    console.error('PDF Error:', error);
                    alert('Error creating PDF. Check console for details.');
                  }
                }}
                className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors hover-scale"
              >
                <Download className="w-5 h-5" />
              </button>
            </div>

              {/* Transportation Report */}
            <div className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors">
              <div className="flex items-center space-x-4">
                <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                  <Car className="w-6 h-6 text-green-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Transportation Impact Report</h4>
                  <p className="text-sm text-gray-600">3.1 MB • PDF file</p>
                </div>
              </div>
              <button 
                onClick={() => {
                  try {
                    const doc = new jsPDF();
                    doc.text('Transportation Report', 20, 20);
                    doc.text('Generated: ' + new Date().toLocaleDateString(), 20, 30);
                    doc.text('Total Distance: 3,247 km', 20, 40);
                    doc.text('Emissions: 487 kg CO₂e', 20, 50);
                    doc.text('Personal Vehicle: 67%', 20, 60);
                    doc.text('Public Transport: 23%', 20, 70);
                    doc.text('Recommendations:', 20, 85);
                    doc.text('• Increase public transport to 40%', 20, 95);
                    doc.text('• Consider electric vehicle', 20, 105);
                    doc.text('• Implement carpooling', 20, 115);
                    doc.save('transportation-report.pdf');
                    alert('PDF downloaded successfully!');
                  } catch (error) {
                    console.error('PDF Error:', error);
                    alert('Error creating PDF. Check console for details.');
                  }
                }}
                className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors hover-scale"
              >
                <Download className="w-5 h-5" />
              </button>
            </div>

            {/* IoT Sensor Data */}
            <div className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors">
              <div className="flex items-center space-x-4">
                <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
                  <Activity className="w-6 h-6 text-purple-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">IoT Sensor Data Export</h4>
                  <p className="text-sm text-gray-600">856 KB • CSV file</p>
                </div>
              </div>
              <button 
                onClick={() => {
                  try {
                    const csvData = [
                      ['timestamp', 'device_id', 'temperature', 'humidity', 'co2', 'pm25', 'wifi_signal'],
                      ['2025-01-15 10:30:00', 'ESP32-001', '22.5', '45', '420', '12', '-48'],
                      ['2025-01-15 10:31:00', 'ESP32-001', '22.7', '44', '418', '11', '-47'],
                      ['2025-01-15 10:32:00', 'ESP32-001', '22.6', '46', '422', '13', '-49'],
                      ['2025-01-15 10:30:00', 'ESP32-002', '23.1', '42', '415', '10', '-52'],
                      ['2025-01-15 10:31:00', 'ESP32-002', '23.0', '43', '417', '11', '-51'],
                      ['2025-01-15 10:32:00', 'ESP32-002', '22.9', '44', '419', '12', '-50']
                    ];
                    const csvContent = csvData.map(row => row.join(',')).join('\n');
                    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
                    const url = URL.createObjectURL(blob);
                    const link = document.createElement('a');
                    link.href = url;
                    link.download = 'iot-sensor-data.csv';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                    URL.revokeObjectURL(url);
                    alert('CSV downloaded successfully!');
                  } catch (error) {
                    console.error('CSV Error:', error);
                    alert('Error creating CSV. Check console for details.');
                  }
                }}
                className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors hover-scale"
              >
                <Download className="w-5 h-5" />
              </button>
            </div>

            {/* Annual Sustainability Report */}
            <div className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors">
              <div className="flex items-center space-x-4">
                <div className="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                  <Award className="w-6 h-6 text-yellow-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Annual Sustainability Report 2024</h4>
                  <p className="text-sm text-gray-600">4.2 MB • PDF file</p>
                </div>
              </div>
              <button 
                onClick={() => {
                  try {
                    const doc = new jsPDF();
                    doc.text('Annual Sustainability Report', 20, 20);
                    doc.text('Generated: ' + new Date().toLocaleDateString(), 20, 30);
                    doc.text('Total Footprint: 2.3 tons CO₂e', 20, 40);
                    doc.text('Reduction from 2023: 18.7%', 20, 50);
                    doc.text('Renewable Energy: 45%', 20, 60);
                    doc.text('Waste Diversion: 78%', 20, 70);
                    doc.text('2025 Goals:', 20, 85);
                    doc.text('• Achieve carbon neutrality', 20, 95);
                    doc.text('• Increase renewable energy to 60%', 20, 105);
                    doc.text('• Reduce waste by 25%', 20, 115);
                    doc.save('annual-sustainability-report.pdf');
                    alert('PDF downloaded successfully!');
                  } catch (error) {
                    console.error('PDF Error:', error);
                    alert('Error creating PDF. Check console for details.');
                  }
                }}
                className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors hover-scale"
              >
                <Download className="w-5 h-5" />
              </button>
            </div>

          </div>
        </div>

        {/* Quick Stats */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-semibold">Total Reports</h3>
              <FileText className="w-5 h-5 text-blue-600" />
          </div>
            <p className="text-3xl font-bold text-blue-600">24</p>
            <p className="text-sm text-gray-600">Generated this year</p>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-semibold">Data Points</h3>
              <Activity className="w-5 h-5 text-green-600" />
          </div>
            <p className="text-3xl font-bold text-green-600">12.4K</p>
            <p className="text-sm text-gray-600">Analyzed this month</p>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-semibold">Accuracy</h3>
              <TrendingUp className="w-5 h-5 text-purple-600" />
          </div>
            <p className="text-3xl font-bold text-purple-600">98.7%</p>
            <p className="text-sm text-gray-600">Forecast precision</p>
        </div>
      </div>
    </div>
  );
  };

  const GoalsRewards = () => (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-yellow-500 to-orange-500 p-8 rounded-xl text-white">
        <h2 className="text-2xl font-bold mb-2">Goals & Rewards</h2>
        <p className="opacity-90">Set ambitious carbon reduction targets and earn rewards</p>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
              <div className="w-6 h-6 border-2 border-green-600 rounded-full flex items-center justify-center">
                <div className="w-3 h-3 border border-green-600 rounded-full"></div>
          </div>
            </div>
            <div className="w-8 h-8 bg-gradient-to-r from-pink-400 via-red-500 to-blue-500 rounded-full flex items-center justify-center">
              <div className="w-6 h-6 border-2 border-white rounded-full flex items-center justify-center">
                <div className="w-2 h-2 bg-white rounded-full"></div>
              </div>
            </div>
          </div>
          <h3 className="text-lg font-semibold mb-2 text-gray-800">Monthly Goal</h3>
          <p className="text-4xl font-bold text-green-600 mb-2">65%</p>
          <p className="text-sm text-gray-600 mb-4">Progress to 50kg CO₂ target</p>
          <div className="w-full bg-gray-200 rounded-full h-3">
            <div className="bg-green-600 h-3 rounded-full transition-all duration-500" style={{ width: '65%' }}></div>
          </div>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <Trophy className="w-8 h-8 text-yellow-500" />
            <span className="text-2xl">🏆</span>
          </div>
          <h3 className="text-lg font-semibold mb-2">Current Level</h3>
          <p className="text-3xl font-bold text-yellow-500">Gold</p>
          <p className="text-sm text-gray-600">EcoWarrior Status</p>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <Award className="w-8 h-8 text-purple-600" />
            <span className="text-2xl">⭐</span>
          </div>
          <h3 className="text-lg font-semibold mb-2">Total Points</h3>
          <p className="text-3xl font-bold text-purple-600">2,450</p>
          <p className="text-sm text-gray-600">EcoPoints earned</p>
        </div>
      </div>
    </div>
  );

  const Marketplace = () => (
    <div className="space-y-8">
      {/* Header */}
      <div className="bg-gradient-to-r from-emerald-600 to-teal-600 p-8 rounded-xl text-white">
        <h2 className="text-3xl font-bold mb-2">Green Marketplace</h2>
        <p className="text-lg opacity-90">Connect with trusted providers for solar panels, carbon offsets, recycling services, and more</p>
      </div>

      {/* Category Cards */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center hover:shadow-md transition-shadow cursor-pointer">
          <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-3">
            <div className="text-2xl">☀️</div>
          </div>
          <h3 className="font-semibold text-gray-800">Solar Energy</h3>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center hover:shadow-md transition-shadow cursor-pointer">
          <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3">
            <div className="text-2xl">🌳</div>
          </div>
          <h3 className="font-semibold text-gray-800">Carbon Offsets</h3>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center hover:shadow-md transition-shadow cursor-pointer">
          <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3">
            <div className="text-2xl">♻️</div>
          </div>
          <h3 className="font-semibold text-gray-800">Recycling</h3>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center hover:shadow-md transition-shadow cursor-pointer">
          <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3">
            <div className="text-2xl">🚗</div>
          </div>
          <h3 className="font-semibold text-gray-800">Green Transport</h3>
        </div>
      </div>

      {/* Featured Services */}
      <div className="space-y-6">
        {/* Solar Installation */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <div className="flex items-start justify-between mb-4">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center">
                <div className="text-xl">☀️</div>
              </div>
              <div>
                <h3 className="text-xl font-bold text-gray-900">Solar Installation</h3>
                <p className="text-sm text-gray-600">SolarTech Solutions</p>
              </div>
            </div>
            <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">✓ Verified</span>
          </div>
          <p className="text-gray-700 mb-4">Professional solar panel installation with 25-year warranty.</p>
          <div className="flex items-center space-x-4 mb-4">
            <div className="flex items-center space-x-1">
              <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
              <span className="text-sm font-medium">4.8</span>
            </div>
            <span className="text-green-600 font-semibold">from $75,000</span>
          </div>
          <div className="bg-green-50 p-3 rounded-lg mb-4">
            <div className="flex items-center space-x-2">
              <Lightbulb className="w-4 h-4 text-green-600" />
              <span className="text-green-700 font-medium">Save 40% on energy</span>
            </div>
          </div>
          <div className="mb-4">
            <h4 className="font-semibold text-gray-900 mb-2">Key Features:</h4>
            <ul className="text-sm text-gray-600 space-y-1">
              <li>• Free consultation</li>
              <li>• 25-year warranty</li>
              <li>• Federal tax credits</li>
              <li>• Professional installation</li>
            </ul>
          </div>
          <div className="flex space-x-3">
            <button className="flex-1 bg-green-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-green-700 transition-colors">
              Get Quote
            </button>
            <button className="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
              Details
            </button>
          </div>
        </div>

        {/* Carbon Offset Credits */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <div className="flex items-start justify-between mb-4">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                <div className="text-xl">🌳</div>
              </div>
              <div>
                <h3 className="text-xl font-bold text-gray-900">Carbon Offset Credits</h3>
                <p className="text-sm text-gray-600">GreenFuture Corp</p>
              </div>
            </div>
            <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">✓ Verified</span>
          </div>
          <p className="text-gray-700 mb-4">Certified reforestation and renewable energy offset credits.</p>
          <div className="flex items-center space-x-4 mb-4">
            <div className="flex items-center space-x-1">
              <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
              <span className="text-sm font-medium">4.9</span>
            </div>
            <span className="text-green-600 font-semibold">$25 per ton CO₂</span>
          </div>
          <div className="bg-green-50 p-3 rounded-lg mb-4">
            <div className="flex items-center space-x-2">
              <div className="w-4 h-4 bg-green-600 rounded-full"></div>
              <span className="text-green-700 font-medium">Offset 100% footprint</span>
            </div>
          </div>
          <div className="mb-4">
            <h4 className="font-semibold text-gray-900 mb-2">Key Features:</h4>
            <ul className="text-sm text-gray-600 space-y-1">
              <li>• Gold Standard certified</li>
              <li>• Real-time tracking</li>
              <li>• Annual reports</li>
              <li>• Global projects</li>
            </ul>
          </div>
          <div className="flex space-x-3">
            <button className="flex-1 bg-green-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-green-700 transition-colors">
              Get Quote
            </button>
            <button className="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
              Details
            </button>
          </div>
        </div>
      </div>

      {/* Featured Offers */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <div className="w-6 h-6 bg-orange-100 rounded-full flex items-center justify-center mr-3">
            <div className="text-sm">🔥</div>
          </div>
          Featured Offers
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-green-50 border border-green-200 rounded-lg p-4 relative">
            <div className="absolute top-3 right-3 bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">
              15 days left
            </div>
            <h4 className="font-semibold text-gray-900 mb-2">Limited Time: Solar Panel Discount</h4>
            <p className="text-sm text-gray-700 mb-3">Get 25% off installation this month + federal tax credits up to $7,500.</p>
            <div className="flex items-center justify-between">
              <div>
                <p className="text-lg font-bold text-green-600">Usually $30,000 - Now $15,000</p>
              </div>
              <button className="bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-green-700 transition-colors">
                Claim Offer
              </button>
            </div>
          </div>

          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 relative">
            <div className="absolute top-3 right-3 bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">
              Popular
            </div>
            <h4 className="font-semibold text-gray-900 mb-2">Carbon Offset Bundle Deal</h4>
            <p className="text-sm text-gray-700 mb-3">Offset your entire yearly footprint for just $180 (normally $240).</p>
            <div className="flex items-center justify-between">
              <div>
                <p className="text-lg font-bold text-blue-600">8.5 tons CO₂ coverage</p>
              </div>
              <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
                Buy Now
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Cost Calculator */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <div className="w-6 h-6 bg-orange-100 rounded-full flex items-center justify-center mr-3">
            <div className="text-sm">💰</div>
          </div>
          Cost Calculator
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">Your Annual Carbon Footprint</label>
              <input 
                type="text" 
                value="8.5 tons CO₂" 
                className="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                readOnly
              />
            </div>
            
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">Select Services</label>
              <div className="space-y-3">
                <label className="flex items-center">
                  <input type="checkbox" checked className="mr-3 text-green-600" />
                  <span className="text-sm">Carbon Offsets - $200</span>
                </label>
                <label className="flex items-center">
                  <input type="checkbox" className="mr-3 text-green-600" />
                  <span className="text-sm">Solar Installation - $15000</span>
                </label>
                <label className="flex items-center">
                  <input type="checkbox" className="mr-3 text-green-600" />
                  <span className="text-sm">EV Charging - $899</span>
                </label>
              </div>
            </div>
          </div>
          
          <div className="bg-green-50 p-6 rounded-lg">
            <h4 className="font-semibold text-gray-900 mb-4">Estimated Total</h4>
            <p className="text-3xl font-bold text-green-600 mb-2">$200</p>
            <p className="text-sm text-gray-600">Potential annual CO₂ reduction: 8.5 tons</p>
          </div>
        </div>
      </div>

      {/* Top Rated Providers */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <div className="w-6 h-6 bg-orange-100 rounded-full flex items-center justify-center mr-3">
            <Star className="w-4 h-4 text-orange-600" />
          </div>
          Top Rated Providers
        </h3>
        
        <div className="space-y-4">
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">GreenFuture Corp</h4>
              <p className="text-sm text-gray-600">Carbon Offsets - 1243 orders</p>
            </div>
            <div className="flex items-center space-x-2">
              <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
              <span className="font-medium">4.9</span>
            </div>
          </div>
          
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">SolarTech Solutions</h4>
              <p className="text-sm text-gray-600">Solar Energy - 567 orders</p>
            </div>
            <div className="flex items-center space-x-2">
              <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
              <span className="font-medium">4.8</span>
            </div>
          </div>
          
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">RecycleMax Pro</h4>
              <p className="text-sm text-gray-600">Waste Management - 892 orders</p>
            </div>
            <div className="flex items-center space-x-2">
              <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
              <span className="font-medium">4.8</span>
            </div>
          </div>
          
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">ChargePoint Network</h4>
              <p className="text-sm text-gray-600">EV Infrastructure - 134 orders</p>
            </div>
            <div className="flex items-center space-x-2">
              <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
              <span className="font-medium">4.7</span>
            </div>
          </div>
        </div>
        
        <div className="text-center mt-6">
          <button className="text-green-600 hover:underline font-medium">View All Providers</button>
        </div>
      </div>

      {/* Become a Partner Provider */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-4 flex items-center">
          <div className="w-6 h-6 bg-orange-100 rounded-full flex items-center justify-center mr-3">
            <div className="text-sm">🛡️</div>
          </div>
          Become a Partner Provider
        </h3>
        <p className="text-gray-700 mb-6">Join our marketplace and help thousands reduce their carbon footprint. We're looking for verified providers in solar, recycling, carbon offsets, and green transportation.</p>
        <div className="flex space-x-4">
          <button className="bg-purple-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-purple-700 transition-colors">
            Apply to Join
          </button>
          <button className="border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 transition-colors">
            Learn More
          </button>
        </div>
      </div>
    </div>
  );

  const Community = () => (
    <div className="space-y-8">
      {/* Header */}
      <div className="bg-gradient-to-r from-indigo-600 to-purple-600 p-8 rounded-xl text-white">
        <h2 className="text-3xl font-bold mb-2">EcoAtlas Community</h2>
        <p className="text-lg opacity-90">Connect with fellow eco-warriors, share achievements, and participate in global challenges</p>
      </div>

      {/* Community Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
              <Globe className="w-6 h-6 text-blue-600" />
            </div>
            <div className="text-right">
              <p className="text-3xl font-bold text-blue-600">12.5K</p>
          <p className="text-sm text-gray-600">Active Members</p>
              <p className="text-xs text-green-600 font-medium">+201 this week</p>
        </div>
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
              <Target className="w-6 h-6 text-green-600" />
            </div>
            <div className="text-right">
              <p className="text-3xl font-bold text-green-600">845</p>
          <p className="text-sm text-gray-600">Tons CO₂ Saved</p>
              <p className="text-xs text-green-600 font-medium">+124 today</p>
        </div>
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
              <MessageCircle className="w-6 h-6 text-purple-600" />
            </div>
            <div className="text-right">
              <p className="text-3xl font-bold text-purple-600">3.2K</p>
          <p className="text-sm text-gray-600">Forum Posts</p>
              <p className="text-xs text-purple-600 font-medium">+89 today</p>
        </div>
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center">
              <Award className="w-6 h-6 text-orange-600" />
            </div>
            <div className="text-right">
              <p className="text-3xl font-bold text-orange-600">156</p>
          <p className="text-sm text-gray-600">Active Challenges</p>
              <p className="text-xs text-orange-600 font-medium">23 ending soon</p>
            </div>
          </div>
        </div>
      </div>

      {/* Global Challenges */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-xl font-bold flex items-center">
            <Trophy className="w-5 h-5 text-orange-600 mr-2" />
            Global Challenges
          </h3>
          <button className="text-blue-600 hover:underline font-medium">View All</button>
        </div>
        
        <div className="space-y-4">
          <div className="border rounded-lg p-4">
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center">
                  <Car className="w-5 h-5 text-gray-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">No Car September</h4>
                  <p className="text-sm text-gray-600">Use public transport, bike, or walk instead of driving.</p>
                  <p className="text-sm text-gray-500">2,847 participants</p>
                </div>
              </div>
              <div className="text-right">
                <p className="text-sm text-gray-500">28 days left</p>
                <p className="text-sm font-medium text-green-600">500 EcoPoints</p>
                <p className="text-sm text-gray-600">85% complete</p>
              </div>
            </div>
            <div className="progress-bar mb-3">
              <div className="progress-fill" style={{width: '85%'}}></div>
            </div>
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-green-700 transition-colors">
              Join Challenge
            </button>
          </div>

          <div className="border rounded-lg p-4">
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center">
                  <Lightbulb className="w-5 h-5 text-yellow-600" />
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Solar Power Switch</h4>
                  <p className="text-sm text-gray-600">Install solar panels or switch to renewable energy plan.</p>
                  <p className="text-sm text-gray-500">897 participants</p>
                </div>
              </div>
              <div className="text-right">
                <p className="text-sm text-gray-500">40 days left</p>
                <p className="text-sm font-medium text-green-600">1000 EcoPoints</p>
                <p className="text-sm text-gray-600">60% complete</p>
              </div>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2 mb-3">
              <div className="bg-blue-600 h-2 rounded-full" style={{width: '60%'}}></div>
            </div>
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-green-700 transition-colors">
              Join Challenge
            </button>
          </div>

          <div className="border rounded-lg p-4">
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                  <div className="text-lg">♻️</div>
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Zero Waste Week</h4>
                  <p className="text-sm text-gray-600">Achieve zero waste to landfill for one full week.</p>
                  <p className="text-sm text-gray-500">1,945 participants</p>
                </div>
              </div>
              <div className="text-right">
                <p className="text-sm text-gray-500">7 days left</p>
                <p className="text-sm font-medium text-green-600">300 EcoPoints</p>
                <p className="text-sm text-gray-600">80% complete</p>
              </div>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2 mb-3">
              <div className="bg-blue-600 h-2 rounded-full" style={{width: '80%'}}></div>
            </div>
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-green-700 transition-colors">
              Join Challenge
            </button>
          </div>

          <div className="border rounded-lg p-4">
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                  <div className="text-lg">🌳</div>
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Plant a Tree</h4>
                  <p className="text-sm text-gray-600">Plant or sponsor a tree in your local community.</p>
                  <p className="text-sm text-gray-500">1,417 participants</p>
                </div>
              </div>
              <div className="text-right">
                <p className="text-sm text-gray-500">12 days left</p>
                <p className="text-sm font-medium text-green-600">200 EcoPoints</p>
                <p className="text-sm text-gray-600">82% complete</p>
              </div>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2 mb-3">
              <div className="bg-blue-600 h-2 rounded-full" style={{width: '82%'}}></div>
            </div>
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-green-700 transition-colors">
              Join Challenge
            </button>
          </div>
        </div>
      </div>

      {/* Community Feed */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-xl font-bold flex items-center">
            <FileText className="w-5 h-5 text-gray-600 mr-2" />
            Community Feed
          </h3>
          <button className="text-blue-600 hover:underline font-medium">Refresh</button>
        </div>
        
        <div className="space-y-4">
          <div className="border-b pb-4">
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-blue-600">SM</div>
              </div>
              <div className="flex-1">
                <div className="flex items-center space-x-2 mb-1">
                  <span className="font-semibold">Sarah Martinez</span>
                  <span className="text-sm text-gray-600">completed the Solar Panel Installation challenge</span>
                  <Star className="w-4 h-4 text-yellow-500" />
                </div>
                <p className="text-sm text-gray-500 mb-2">2 hours ago</p>
                <div className="flex items-center space-x-4 text-sm text-gray-600">
                  <div className="flex items-center space-x-1">
                    <div className="w-4 h-4 text-red-500">❤️</div>
                    <span>24</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <MessageCircle className="w-4 h-4" />
                    <span>5</span>
                  </div>
                  <button className="text-blue-600 hover:underline">Reply</button>
                </div>
              </div>
            </div>
          </div>

          <div className="border-b pb-4">
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-green-600">AK</div>
              </div>
              <div className="flex-1">
                <div className="flex items-center space-x-2 mb-1">
                  <span className="font-semibold">Alex Kumar</span>
                  <span className="text-sm text-gray-600">shared a tip about reducing transport emissions</span>
                </div>
                <div className="bg-gray-50 p-3 rounded-lg my-2">
                  <p className="text-sm italic">"Switching to bike commuting saved me 150kg CO₂ this month! 🚴"</p>
                </div>
                <p className="text-sm text-gray-500 mb-2">4 hours ago</p>
                <div className="flex items-center space-x-4 text-sm text-gray-600">
                  <div className="flex items-center space-x-1">
                    <div className="w-4 h-4 text-red-500">❤️</div>
                    <span>38</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <MessageCircle className="w-4 h-4" />
                    <span>8</span>
                  </div>
                  <button className="text-blue-600 hover:underline">Reply</button>
                </div>
              </div>
            </div>
          </div>

          <div className="border-b pb-4">
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-purple-600">ML</div>
              </div>
              <div className="flex-1">
                <div className="flex items-center space-x-2 mb-1">
                  <span className="font-semibold">Maria Lopez</span>
                  <span className="text-sm text-gray-600">reached Gold level status!</span>
                  <Star className="w-4 h-4 text-yellow-500" />
                </div>
                <p className="text-sm text-gray-500 mb-2">6 hours ago</p>
                <div className="flex items-center space-x-4 text-sm text-gray-600">
                  <div className="flex items-center space-x-1">
                    <div className="w-4 h-4 text-red-500">❤️</div>
                    <span>17</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <MessageCircle className="w-4 h-4" />
                    <span>2</span>
                  </div>
                  <button className="text-blue-600 hover:underline">Reply</button>
                </div>
              </div>
            </div>
          </div>

          <div className="border-b pb-4">
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-orange-600">JD</div>
              </div>
              <div className="flex-1">
                <div className="flex items-center space-x-2 mb-1">
                  <span className="font-semibold">John Davis</span>
                  <span className="text-sm text-gray-600">started the Zero Waste Week challenge</span>
                </div>
                <div className="bg-gray-50 p-3 rounded-lg my-2">
                  <p className="text-sm italic">"Day 1 of zero waste living - wish me luck! 🗑️"</p>
                </div>
                <p className="text-sm text-gray-500 mb-2">1 day ago</p>
                <div className="flex items-center space-x-4 text-sm text-gray-600">
                  <div className="flex items-center space-x-1">
                    <div className="w-4 h-4 text-red-500">❤️</div>
                    <span>17</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <MessageCircle className="w-4 h-4" />
                    <span>4</span>
                  </div>
                  <button className="text-blue-600 hover:underline">Reply</button>
                </div>
              </div>
            </div>
          </div>

          <div className="border-b pb-4">
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 bg-pink-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-pink-600">EC</div>
              </div>
              <div className="flex-1">
                <div className="flex items-center space-x-2 mb-1">
                  <span className="font-semibold">Emma Chen</span>
                  <span className="text-sm text-gray-600">posted in Solar Energy forum</span>
                </div>
                <div className="bg-gray-50 p-3 rounded-lg my-2">
                  <p className="text-sm italic">"My solar installation reduced my electricity bill by 30%! Amazing!"</p>
                </div>
                <p className="text-sm text-gray-500 mb-2">1 day ago</p>
                <div className="flex items-center space-x-4 text-sm text-gray-600">
                  <div className="flex items-center space-x-1">
                    <div className="w-4 h-4 text-red-500">❤️</div>
                    <span>7</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <MessageCircle className="w-4 h-4" />
                    <span>1</span>
                  </div>
                  <button className="text-blue-600 hover:underline">Reply</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div className="text-center mt-6">
          <button className="text-blue-600 hover:underline font-medium">Load More Posts</button>
        </div>
      </div>

      {/* Discussion Forums */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-xl font-bold flex items-center">
            <FileText className="w-5 h-5 text-gray-600 mr-2" />
            Discussion Forums
          </h3>
          <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
            New Topic
          </button>
        </div>
        
        <div className="space-y-3">
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Solar & Renewable Energy</h4>
              <p className="text-sm text-gray-600">Solar panels, wind energy, and renewable solutions</p>
              <div className="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                <span>498 posts</span>
                <span>Last activity: 2 min ago</span>
              </div>
            </div>
            <span className="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">Hot</span>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Electric Vehicles</h4>
              <p className="text-sm text-gray-600">EVs, charging, and sustainable transportation</p>
              <div className="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                <span>332 posts</span>
                <span>Last activity: 15 min ago</span>
              </div>
            </div>
            <span className="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">Hot</span>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Zero Waste Living</h4>
              <p className="text-sm text-gray-600">Reduce waste, recycle, and minimize waste</p>
              <div className="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                <span>121 posts</span>
                <span>Last activity: 1 hour ago</span>
              </div>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Carbon Offsetting</h4>
              <p className="text-sm text-gray-600">Offset programs, tree planting, and impact</p>
              <div className="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                <span>189 posts</span>
                <span>Last activity: 5 hours ago</span>
              </div>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Sustainable Travel</h4>
              <p className="text-sm text-gray-600">Eco-friendly travel tips and destinations</p>
              <div className="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                <span>267 posts</span>
                <span>Last activity: 1 day ago</span>
              </div>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Green Home Tips</h4>
              <p className="text-sm text-gray-600">Energy efficiency and sustainable living</p>
              <div className="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                <span>401 posts</span>
                <span>Last activity: 7 days ago</span>
              </div>
            </div>
            <span className="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">Hot</span>
          </div>
        </div>
      </div>

      {/* Community Leaderboard */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <Trophy className="w-5 h-5 text-green-600 mr-2" />
          Community Leaderboard
        </h3>
        
        <div className="space-y-3">
          <div className="flex items-center justify-between p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
            <div className="flex items-center space-x-3">
              <Star className="w-5 h-5 text-yellow-500" />
              <div>
                <h4 className="font-semibold text-lg">{user?.realName || user?.name || 'User'}</h4>
                <p className="text-sm text-gray-600">Rank #1 • all this week</p>
              </div>
            </div>
            <div className="text-right">
              <span className="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full">Platinum</span>
              <p className="text-sm font-medium text-gray-900">2450 pts</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <Star className="w-5 h-5 text-yellow-500" />
              <div>
                <h4 className="font-semibold text-lg">Sarah Martinez</h4>
                <p className="text-sm text-gray-600">Rank #2 • all this week</p>
              </div>
            </div>
            <div className="text-right">
              <span className="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Gold</span>
              <p className="text-sm font-medium text-gray-900">2200 pts</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <Star className="w-5 h-5 text-yellow-500" />
              <div>
                <h4 className="font-semibold text-lg">Alex Kumar</h4>
                <p className="text-sm text-gray-600">Rank #3 • all this week</p>
              </div>
            </div>
            <div className="text-right">
              <span className="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Gold</span>
              <p className="text-sm font-medium text-gray-900">2205 pts</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <Star className="w-5 h-5 text-yellow-500" />
              <div>
                <h4 className="font-semibold text-lg">Maria Lopez</h4>
                <p className="text-sm text-gray-600">Rank #4 • all this week</p>
              </div>
            </div>
            <div className="text-right">
              <span className="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Gold</span>
              <p className="text-sm font-medium text-gray-900">2150 pts</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <Star className="w-5 h-5 text-yellow-500" />
              <div>
                <h4 className="font-semibold text-lg">John Davis</h4>
                <p className="text-sm text-gray-600">Rank #5 • all this week</p>
              </div>
            </div>
            <div className="text-right">
              <span className="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">Silver</span>
              <p className="text-sm font-medium text-gray-900">2100 pts</p>
            </div>
          </div>
        </div>
        
        <div className="text-center mt-6">
          <button className="bg-green-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-green-700 transition-colors">
            View Full Leaderboard
          </button>
        </div>
      </div>

      {/* Find Eco-Friends */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <Users className="w-5 h-5 text-purple-600 mr-2" />
          Find Eco-Friends
        </h3>
        
        <div className="space-y-4">
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-green-600">JW</div>
              </div>
              <div>
                <h4 className="font-semibold text-lg">Jennifer Wilson</h4>
                <p className="text-sm text-gray-600">San Francisco, CA</p>
                <p className="text-sm text-gray-500">1 mutual connection</p>
                <div className="flex space-x-2 mt-2">
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Solar Energy</span>
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">EV</span>
                </div>
              </div>
            </div>
            <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
              Connect
            </button>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-blue-600">MB</div>
              </div>
              <div>
                <h4 className="font-semibold text-lg">Michael Brown</h4>
                <p className="text-sm text-gray-600">Austin, TX</p>
                <p className="text-sm text-gray-500">1 mutual connection</p>
                <div className="flex space-x-2 mt-2">
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Zero Waste</span>
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Cycling</span>
                </div>
              </div>
            </div>
            <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
              Connect
            </button>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-purple-600">LZ</div>
              </div>
              <div>
                <h4 className="font-semibold text-lg">Lisa Zhang</h4>
                <p className="text-sm text-gray-600">Seattle, WA</p>
                <p className="text-sm text-gray-500">2 mutual connections</p>
                <div className="flex space-x-2 mt-2">
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Renewable Energy</span>
                </div>
              </div>
            </div>
            <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
              Connect
            </button>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center">
                <div className="text-sm font-semibold text-orange-600">DR</div>
              </div>
              <div>
                <h4 className="font-semibold text-lg">David Rodriguez</h4>
                <p className="text-sm text-gray-600">Denver, CO</p>
                <p className="text-sm text-gray-500">1 mutual connection</p>
                <div className="flex space-x-2 mt-2">
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Carbon Offsets</span>
                  <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Gardening</span>
                </div>
              </div>
            </div>
            <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
              Connect
            </button>
          </div>
        </div>
        
        <div className="text-center mt-6">
          <button className="bg-blue-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-blue-700 transition-colors">
            Discover More People
          </button>
        </div>
      </div>

      {/* Share Your Eco Journey */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-4 flex items-center">
          <div className="w-6 h-6 bg-yellow-100 rounded-full flex items-center justify-center mr-3">
            <div className="text-sm">☀️</div>
          </div>
          Share Your Eco Journey
        </h3>
        <p className="text-gray-700 mb-6">Inspire others by sharing your sustainability wins, challenges, and tips. Every story matters in our fight against climate change.</p>
        <div className="flex space-x-4">
          <button className="bg-purple-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-purple-700 transition-colors">
            Share Your Story
          </button>
          <button className="border border-purple-600 text-purple-600 px-6 py-3 rounded-lg hover:bg-purple-50 transition-colors">
            View Success Stories
          </button>
        </div>
      </div>
    </div>
  );

  const AIAdvisor = () => (
    <div className="space-y-8">
      {/* Header */}
      <div className="bg-gradient-to-r from-cyan-600 to-blue-600 p-8 rounded-xl text-white">
        <h2 className="text-3xl font-bold mb-2">AI Personal Advisor</h2>
        <p className="text-lg opacity-90">Get personalized recommendations powered by AI to optimize your carbon footprint reduction journey</p>
      </div>

      {/* Key Metrics */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <Brain className="w-8 h-8 text-blue-600" />
            <div className="text-right">
              <p className="text-3xl font-bold text-blue-600">94%</p>
          <p className="text-sm text-gray-600">AI Accuracy Rate</p>
              <p className="text-xs text-green-600 font-medium">Based on 1.2K predictions</p>
        </div>
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <Target className="w-8 h-8 text-green-600" />
            <div className="text-right">
              <p className="text-3xl font-bold text-green-600">8/12</p>
          <p className="text-sm text-gray-600">Recommendations Followed</p>
              <p className="text-xs text-green-600 font-medium">42.5 kg CO₂ saved</p>
        </div>
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center justify-between mb-4">
            <Lightbulb className="w-8 h-8 text-yellow-500" />
            <div className="text-right">
              <p className="text-3xl font-bold text-yellow-500">15</p>
          <p className="text-sm text-gray-600">New Insights</p>
              <p className="text-xs text-gray-500">Updated daily</p>
            </div>
          </div>
        </div>
      </div>

      {/* Weekly Action Plan */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-xl font-bold flex items-center">
            <Calendar className="w-5 h-5 text-green-600 mr-2" />
            Weekly Action Plan
          </h3>
          <div className="flex items-center space-x-4">
            <span className="text-sm text-gray-600">Timeline: 1 week</span>
            <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
              Apply
            </button>
          </div>
        </div>
        
        <div className="mb-4 p-3 bg-gray-100 rounded-lg">
          <p className="text-sm text-gray-700">Schedule appliances during off-peak hours</p>
        </div>
        
        <div className="space-y-3">
          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                <div className="text-sm">☀️</div>
              </div>
              <div>
                <h4 className="font-semibold">Monday: Walk to work (weather permitting)</h4>
                <p className="text-sm text-gray-600">22°C</p>
                <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Easy</span>
              </div>
            </div>
            <div className="text-right">
              <p className="text-sm font-medium text-green-600">2.1 kg CO₂</p>
              <p className="text-xs text-green-600">Done</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                <div className="text-sm">👨‍🍳</div>
              </div>
              <div>
                <h4 className="font-semibold">Tuesday: Prepare plant-based lunch</h4>
                <p className="text-sm text-gray-600">Recipe: Quinoa Buddha Bowl</p>
                <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Easy</span>
              </div>
            </div>
            <div className="text-right">
              <p className="text-sm font-medium text-green-600">0.8 kg CO₂</p>
              <p className="text-xs text-green-600">Done</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center">
                <Thermometer className="w-5 h-5 text-red-600" />
              </div>
              <div>
                <h4 className="font-semibold">Wednesday: Lower thermostat by 2°C</h4>
                <p className="text-sm text-gray-600">Current: 22°C → Target: 20°C</p>
                <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Easy</span>
              </div>
            </div>
            <div className="text-right">
              <p className="text-sm font-medium text-green-600">1.2 kg CO₂</p>
              <p className="text-xs text-green-600">Done</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                <div className="text-sm">🚴</div>
              </div>
              <div>
                <h4 className="font-semibold">Thursday: Use bike for errands</h4>
                <p className="text-sm text-gray-600">3.2km route planned</p>
                <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">Medium</span>
              </div>
            </div>
            <div className="text-right">
              <p className="text-sm font-medium text-green-600">1.8 kg CO₂</p>
              <p className="text-xs text-green-600">Done</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
                <div className="text-sm">💻</div>
              </div>
              <div>
                <h4 className="font-semibold">Friday: Work from home</h4>
                <p className="text-sm text-gray-600">3 video calls scheduled</p>
                <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Easy</span>
              </div>
            </div>
            <div className="text-right">
              <p className="text-sm font-medium text-green-600">3.4 kg CO₂</p>
              <p className="text-xs text-green-600">Done</p>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center">
                <div className="text-sm">📍</div>
              </div>
              <div>
                <h4 className="font-semibold">Weekend: Local activities only</h4>
                <p className="text-sm text-gray-600">5 local options found</p>
                <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">Medium</span>
              </div>
            </div>
            <div className="text-right">
              <p className="text-sm font-medium text-green-600">2.5 kg CO₂</p>
              <p className="text-xs text-green-600">Done</p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 p-4 bg-green-50 rounded-lg">
          <div className="flex items-center justify-between">
            <div>
              <p className="font-semibold text-green-800">Weekly Total Potential:</p>
              <p className="text-sm text-green-700">Complete all actions to maximize impact!</p>
            </div>
            <p className="text-2xl font-bold text-green-600">11.8 kg CO₂</p>
          </div>
        </div>
      </div>

      {/* Personalized Recommendations */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <Brain className="w-5 h-5 text-purple-600 mr-2" />
          Personalized Recommendations
        </h3>
        
        <div className="space-y-4">
          <div className="border rounded-lg p-4 relative">
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                  <div className="text-sm">✨</div>
                </div>
                <div>
                  <h4 className="font-semibold text-lg">Install Smart Thermostat</h4>
                  <p className="text-sm text-gray-600">Based on your heating patterns, you could save 15% on energy costs</p>
                </div>
              </div>
              <div className="flex space-x-2">
                <span className="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">High Priority</span>
                <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">AI: 94%</span>
              </div>
            </div>
            
            <div className="grid grid-cols-3 gap-4 mb-4">
              <div>
                <p className="text-sm text-gray-600">Annual Savings:</p>
                <p className="font-semibold text-green-600">245 kg CO₂/year</p>
              </div>
              <div>
                <p className="text-sm text-gray-600">Investment:</p>
                <p className="font-semibold text-gray-900">$200-400</p>
              </div>
              <div>
                <p className="text-sm text-gray-600">Payback Period:</p>
                <p className="font-semibold text-gray-900">18 months</p>
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
                Learn More
              </button>
              <div className="text-orange-500">⚡</div>
            </div>
          </div>
        </div>
      </div>

      {/* Smart Insights */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <Brain className="w-5 h-5 text-blue-600 mr-2" />
          Smart Insights
        </h3>
        
        <div className="space-y-4">
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Your commute generates 68% of transport emissions</h4>
              <p className="text-sm text-gray-600">Try carpooling 2x/week to save 156kg CO₂ annually</p>
              <p className="text-xs text-gray-500 mt-1">2-4 weeks</p>
            </div>
            <div className="flex items-center space-x-3">
              <span className="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">High Impact</span>
              <span className="text-xs text-gray-600">92% confident</span>
              <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
                Apply
              </button>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Home heating peaks during evening hours (6-9 PM)</h4>
              <p className="text-sm text-gray-600">Smart thermostat could reduce usage by 25%</p>
              <p className="text-xs text-gray-500 mt-1">1-2 months</p>
            </div>
            <div className="flex items-center space-x-3">
              <span className="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Medium Impact</span>
              <span className="text-xs text-gray-600">87% confident</span>
              <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
                Apply
              </button>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex-1">
              <h4 className="font-semibold text-lg">Food choices are already optimized</h4>
              <p className="text-sm text-gray-600">Great job! Keep up the plant-based meals</p>
              <p className="text-xs text-gray-500 mt-1">Ongoing</p>
            </div>
            <div className="flex items-center space-x-3">
              <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Optimized</span>
              <span className="text-xs text-gray-600">96% confident</span>
              <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
                Apply
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* AI Learning from Your Habits */}
      <div className="bg-blue-50 rounded-xl p-6">
        <h3 className="text-xl font-bold mb-4">AI Learning from Your Habits</h3>
        <p className="text-gray-700 mb-6">Our AI continuously learns from your behavior patterns, preferences, and results to provide increasingly personalized recommendations. The more you use EcoAtlas, the smarter your advisor becomes!</p>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="bg-white p-4 rounded-lg">
            <div className="flex items-center space-x-3 mb-3">
              <div className="w-8 h-8 bg-pink-100 rounded-lg flex items-center justify-center">
                <Brain className="w-5 h-5 text-pink-600" />
              </div>
              <h4 className="font-semibold">Pattern Recognition</h4>
            </div>
            <p className="text-sm text-gray-600">Identifies your energy usage patterns and behavioral trends.</p>
          </div>
          
          <div className="bg-white p-4 rounded-lg">
            <div className="flex items-center space-x-3 mb-3">
              <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                <BarChart3 className="w-5 h-5 text-blue-600" />
              </div>
              <h4 className="font-semibold">Predictive Analytics</h4>
            </div>
            <p className="text-sm text-gray-600">Forecasts your future carbon footprint and suggests prevention.</p>
          </div>
          
          <div className="bg-white p-4 rounded-lg">
            <div className="flex items-center space-x-3 mb-3">
              <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                <Target className="w-5 h-5 text-green-600" />
              </div>
              <h4 className="font-semibold">Adaptive Learning</h4>
            </div>
            <p className="text-sm text-gray-600">Adjusts recommendations based on your success rates.</p>
          </div>
        </div>
      </div>

      {/* Chat with AI Advisor */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <div className="w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center mr-3">
            <div className="text-sm">🤖</div>
          </div>
          Chat with AI Advisor
        </h3>
        
        <div className="h-64 overflow-y-auto p-4 space-y-3 bg-gray-50 rounded-lg mb-4">
          <div className="flex justify-start">
            <div className="bg-blue-100 p-3 rounded-lg max-w-xs">
              <p className="text-sm">Hi! I've analyzed your recent carbon data. Would you like specific recommendations for reducing your transport emissions?</p>
            </div>
          </div>
          
          <div className="flex justify-end">
            <div className="bg-green-100 p-3 rounded-lg max-w-xs">
              <p className="text-sm">Yes, I'm spending too much on gas and want to be more eco-friendly.</p>
            </div>
          </div>
          
          <div className="flex justify-start">
            <div className="bg-blue-100 p-3 rounded-lg max-w-xs">
              <p className="text-sm">Perfect! Based on your 25km daily commute, I recommend carpooling 3x/week (save $1,200/year + 180kg CO₂) or switching to hybrid vehicle (save 40% emissions). Which interests you more?</p>
            </div>
          </div>
        </div>
        
        <div className="flex space-x-2 mb-4">
          <input 
            type="text" 
            placeholder="Ask about carbon reduction strategies..."
            className="flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <button className="bg-blue-600 text-white px-4 py-3 rounded-lg hover:bg-blue-700 transition-colors">
            Send
          </button>
        </div>
        
        <div className="flex flex-wrap gap-2">
          <button className="bg-gray-100 text-gray-700 px-3 py-2 rounded-full text-sm hover:bg-gray-200 transition-colors">
            How can I reduce home energy?
          </button>
          <button className="bg-gray-100 text-gray-700 px-3 py-2 rounded-full text-sm hover:bg-gray-200 transition-colors">
            Best EV for my budget?
          </button>
          <button className="bg-gray-100 text-gray-700 px-3 py-2 rounded-full text-sm hover:bg-gray-200 transition-colors">
            Carbon offset options?
          </button>
          <button className="bg-gray-100 text-gray-700 px-3 py-2 rounded-full text-sm hover:bg-gray-200 transition-colors">
            Sustainable travel tips?
          </button>
        </div>
      </div>

      {/* AI Performance Dashboard & Goals */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div>
            <h3 className="text-lg font-semibold mb-4 flex items-center">
              <BarChart3 className="w-5 h-5 text-green-600 mr-2" />
              AI Performance Dashboard
            </h3>
            <div className="space-y-4">
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Recommendations Accuracy:</span>
                  <span className="font-semibold">94%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-green-600 h-2 rounded-full" style={{width: '94%'}}></div>
                </div>
              </div>
              
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>CO₂ Saved This Month:</span>
                  <span className="font-semibold text-green-600">42.5 kg</span>
                </div>
              </div>
              
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Money Saved:</span>
                  <span className="font-semibold text-green-600">AED 467</span>
                </div>
              </div>
              
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Learning Progress:</span>
                  <span className="font-semibold">78%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-purple-600 h-2 rounded-full" style={{width: '78%'}}></div>
                </div>
              </div>
            </div>
          </div>
          
          <div>
            <h3 className="text-lg font-semibold mb-4 flex items-center">
              <div className="w-5 h-5 bg-pink-100 rounded-full flex items-center justify-center mr-2">
                <Target className="w-3 h-3 text-pink-600" />
              </div>
              Next AI Goals
            </h3>
            <ul className="space-y-2 text-sm text-gray-600">
              <li>• Learn your seasonal energy patterns</li>
              <li>• Optimize weekend activity recommendations</li>
              <li>• Integrate weather data for better planning</li>
            </ul>
          </div>
        </div>
        
        <div className="mt-6 text-center">
          <button className="bg-purple-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-purple-700 transition-colors">
            View Detailed Analytics
          </button>
        </div>
      </div>

      {/* PDF Report Generation */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold flex items-center">
            <FileText className="w-5 h-5 text-purple-600 mr-2" />
            Generate AI Report
          </h3>
        </div>
        <div className="flex justify-center">
          <button
            onClick={() => {
              try {
                const doc = generateAIAnalyticsReport();
                doc.save(`ai-analytics-report-${new Date().toISOString().slice(0,10)}.pdf`);
              } catch (error) {
                console.error('Error generating PDF:', error);
                alert('Error generating PDF. Please try again.');
              }
            }}
            className="flex items-center justify-center space-x-2 px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
          >
            <Download className="w-5 h-5" />
            <span className="font-medium">Download AI Analytics Report</span>
          </button>
        </div>
      </div>
    </div>
  );

  const IoTSensors = () => {
    const { isDarkMode } = useTheme();
    const [selectedView, setSelectedView] = useState('grid');
    const [selectedTimeRange, setSelectedTimeRange] = useState('live');
    const [realTimeData, setRealTimeData] = useState([]);
    const [deviceStatus, setDeviceStatus] = useState({});
    const [isConnected, setIsConnected] = useState(false);
    const [wsConnection, setWsConnection] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    
    // Real sensor data from ESP32
    const [sensorData, setSensorData] = useState([]);
    const [devices, setDevices] = useState([]);
    const [latestData, setLatestData] = useState({});

    // Fetch sensor data from backend
    const fetchSensorData = async () => {
      try {
        setLoading(true);
        setError(null);
        
        // Check backend health first
        const healthCheck = await fetch('http://localhost:5000/api/health');
        if (!healthCheck.ok) {
          throw new Error('Backend server is not responding');
        }
        
        // Fetch latest data from all devices
        const response = await fetch('http://localhost:5000/api/sensor-data/latest');
        if (!response.ok) {
          if (response.status === 404) {
            throw new Error('Sensor data endpoint not found. Check backend configuration.');
          }
          throw new Error(`Failed to fetch sensor data: ${response.status} ${response.statusText}`);
        }
        
        const data = await response.json();
        if (data.success) {
          setLatestData(data.data);
          setIsConnected(true);
        } else {
          throw new Error(data.error || 'Invalid response format');
        }
        
        // Fetch historical data
        const historyResponse = await fetch('http://localhost:5000/api/sensor-data?limit=50');
        if (historyResponse.ok) {
          const historyData = await historyResponse.json();
          if (historyData.success) {
            setSensorData(historyData.data);
          }
        }
        
        // Fetch device list
        const devicesResponse = await fetch('http://localhost:5000/api/devices');
        if (devicesResponse.ok) {
          const devicesData = await devicesResponse.json();
          if (devicesData.success) {
            setDevices(devicesData.devices);
          }
        }
        
      } catch (err) {
        console.error('Error fetching sensor data:', err);
        
        // Provide more specific error messages
        if (err.name === 'TypeError' && err.message.includes('fetch')) {
          setError('Cannot connect to backend server. Please check if it\'s running on port 5000.');
        } else if (err.message.includes('404')) {
          setError('API endpoint not found. Please check backend configuration.');
        } else if (err.message.includes('500')) {
          setError('Backend server error. Please check server logs.');
        } else {
          setError(err.message);
        }
        
        setIsConnected(false);
      } finally {
        setLoading(false);
      }
    };

    // Initial data fetch
    useEffect(() => {
      fetchSensorData();
      
      // Set up polling for real-time updates
      const interval = setInterval(fetchSensorData, 30000); // Every 30 seconds
      
      return () => clearInterval(interval);
    }, []);

    // WebSocket connection for real-time ESP32 data
    useEffect(() => {
      const connectWebSocket = () => {
        try {
          const ws = new WebSocket('ws://localhost:8080');
          setWsConnection(ws);

          ws.onopen = () => {
            console.log('WebSocket connected to ESP32 data');
            setIsConnected(true);
          };

          ws.onmessage = (event) => {
            try {
              const message = JSON.parse(event.data);
              
              if (message.type === 'sensor_data') {
                setRealTimeData(prev => {
                  const newData = [message.data, ...prev.slice(0, 99)]; // Keep last 100 readings
                  return newData;
                });
              } else if (message.type === 'device_status') {
                setDeviceStatus(prev => ({
                  ...prev,
                  [message.data.device_id]: message.data
                }));
              }
            } catch (err) {
              console.error('Error parsing WebSocket message:', err);
            }
          };

          ws.onclose = () => {
            console.log('WebSocket disconnected');
            setIsConnected(false);
            // Attempt to reconnect after 3 seconds
            setTimeout(connectWebSocket, 3000);
          };

          ws.onerror = (error) => {
            console.error('WebSocket error:', error);
            setIsConnected(false);
          };

        } catch (err) {
          console.error('Error creating WebSocket:', err);
        }
      };

      connectWebSocket();

      return () => {
        if (wsConnection) {
          wsConnection.close();
        }
      };
    }, []);

    // Get latest real-time data for each device
    const getLatestRealTimeData = (deviceId) => {
      return realTimeData.find(data => data.device_id === deviceId);
    };

    // Get unique ESP32 devices
    const esp32Devices = [...new Set(realTimeData.map(data => data.device_id))];

    return (
      <div className="space-y-8">
        {/* Header */}
        <div className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 p-8 rounded-xl text-white relative overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-600/20 to-purple-600/20"></div>
          <div className="absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32"></div>
          <div className="relative z-10">
            <div className="flex items-center space-x-4 mb-4">
              <div className="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center">
                <Globe className="w-6 h-6 text-white" />
              </div>
              <div>
                <h2 className="text-3xl font-bold">ESP32 Sensor Network</h2>
                <p className="text-lg opacity-90">Real-time monitoring with wireless ESP32 IoT sensors throughout your property</p>
              </div>
            </div>
          </div>
        </div>

        {/* Main Sensors - Real ESP32 Data */}
        <div className={`rounded-xl shadow-sm border p-6 transition-colors duration-300 ${
          isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
        }`}>
          <div className="flex items-center justify-between mb-6">
            <div className="flex items-center space-x-3">
              <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${
                isDarkMode ? 'bg-green-900/30' : 'bg-green-100'
              }`}>
                <Wifi className={`w-5 h-5 ${isDarkMode ? 'text-green-400' : 'text-green-600'}`} />
              </div>
              <div>
                <h3 className={`text-xl font-bold transition-colors duration-300 ${
                  isDarkMode ? 'text-white' : 'text-gray-900'
                }`}>Main Sensors</h3>
                <p className={`text-sm transition-colors duration-300 ${
                  isDarkMode ? 'text-gray-400' : 'text-gray-600'
                }`}>Live ESP32 environmental monitoring</p>
              </div>
            </div>
            <div className="flex items-center space-x-3">
              <div className={`flex items-center space-x-2 px-3 py-1 rounded-full ${
                isConnected 
                  ? isDarkMode 
                    ? 'bg-green-900/30 text-green-400' 
                    : 'bg-green-100 text-green-800'
                  : isDarkMode
                  ? 'bg-red-900/30 text-red-400'
                  : 'bg-red-100 text-red-800'
              }`}>
                <div className={`w-2 h-2 rounded-full ${
                  isConnected ? 'bg-green-500' : 'bg-red-500'
                }`}></div>
                <span className="text-sm font-medium">
                  {isConnected ? 'Connected' : 'Disconnected'}
                </span>
              </div>
              <span className={`text-sm transition-colors duration-300 ${
                isDarkMode ? 'text-gray-400' : 'text-gray-500'
              }`}>
                {devices.length} device{devices.length !== 1 ? 's' : ''} online
              </span>
            </div>
          </div>

          {loading ? (
            <div className="flex items-center justify-center py-12">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
              <span className={`ml-3 transition-colors duration-300 ${
                isDarkMode ? 'text-white' : 'text-gray-900'
              }`}>Loading sensor data...</span>
            </div>
          ) : error ? (
            <div className="text-center py-12">
              <div className="text-red-500 mb-2">❌ Error loading sensor data</div>
              <p className={`text-sm transition-colors duration-300 ${
                isDarkMode ? 'text-gray-400' : 'text-gray-600'
              }`}>{error}</p>
              <button 
                onClick={fetchSensorData}
                className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
              >
                Retry
              </button>
            </div>
          ) : devices.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {devices.map(device => {
                const deviceId = device.device_id;
                const deviceData = latestData.find(d => d.device_id === deviceId);
                const isOnline = device.last_seen && new Date(device.last_seen) > new Date(Date.now() - 5 * 60 * 1000); // 5 minutes
                
                if (!deviceData) return null;

                // Get air quality status
                const getAirQualityStatus = (aq) => {
                  if (aq <= 50) return { status: 'Good', color: 'text-green-600', bg: 'bg-green-100' };
                  if (aq <= 100) return { status: 'Moderate', color: 'text-yellow-600', bg: 'bg-yellow-100' };
                  if (aq <= 150) return { status: 'Unhealthy for Sensitive', color: 'text-orange-600', bg: 'bg-orange-100' };
                  return { status: 'Unhealthy', color: 'text-red-600', bg: 'bg-red-100' };
                };

                const airQuality = getAirQualityStatus(deviceData.air_quality || 0);

                return (
                  <div key={deviceId} className={`border rounded-lg p-4 hover:shadow-md transition-all duration-300 ${
                    isDarkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-white'
                  }`}>
                    {/* Device Header */}
                    <div className="flex items-center justify-between mb-4">
                      <div className="flex items-center space-x-2">
                        <div className={`w-3 h-3 rounded-full ${
                          isOnline ? 'bg-green-500' : 'bg-red-500'
                        }`}></div>
                        <h4 className={`font-semibold transition-colors duration-300 ${
                          isDarkMode ? 'text-white' : 'text-gray-900'
                        }`}>{deviceId}</h4>
                      </div>
                      <span className={`text-xs transition-colors duration-300 ${
                        isDarkMode ? 'text-gray-400' : 'text-gray-500'
                      }`}>
                        {device.last_seen ? new Date(device.last_seen).toLocaleTimeString() : 'Never'}
                      </span>
                    </div>

                    {/* Sensor Readings */}
                    <div className="space-y-3">
                      {/* Temperature & Humidity */}
                      <div className="grid grid-cols-2 gap-3">
                        <div className="flex items-center space-x-2">
                          <Thermometer className="w-4 h-4 text-red-500" />
                          <div>
                            <p className={`text-sm font-medium transition-colors duration-300 ${
                              isDarkMode ? 'text-white' : 'text-gray-900'
                            }`}>
                              {deviceData.temperature ? deviceData.temperature.toFixed(1) : 'N/A'}°C
                            </p>
                            <p className={`text-xs transition-colors duration-300 ${
                              isDarkMode ? 'text-gray-400' : 'text-gray-600'
                            }`}>Temperature</p>
                          </div>
                        </div>
                        <div className="flex items-center space-x-2">
                          <Droplet className="w-4 h-4 text-blue-500" />
                          <div>
                            <p className={`text-sm font-medium transition-colors duration-300 ${
                              isDarkMode ? 'text-white' : 'text-gray-900'
                            }`}>
                              {deviceData.humidity ? deviceData.humidity.toFixed(1) : 'N/A'}%
                            </p>
                            <p className={`text-xs transition-colors duration-300 ${
                              isDarkMode ? 'text-gray-400' : 'text-gray-600'
                            }`}>Humidity</p>
                          </div>
                        </div>
                      </div>

                      {/* Air Quality */}
                      <div className="flex items-center space-x-2">
                        <Wind className="w-4 h-4 text-green-500" />
                        <div className="flex-1">
                          <div className="flex items-center justify-between">
                            <p className="text-sm font-medium text-gray-900">
                              {latestData.pm25.toFixed(1)} μg/m³
                            </p>
                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${airQuality.bg} ${airQuality.color}`}>
                              {airQuality.status}
                            </span>
                          </div>
                          <p className="text-xs text-gray-600">PM2.5 Air Quality</p>
                        </div>
                      </div>

                      {/* CO2 & Power */}
                      <div className="grid grid-cols-2 gap-3">
                        <div className="flex items-center space-x-2">
                          <Globe className="w-4 h-4 text-purple-500" />
                          <div>
                            <p className="text-sm font-medium text-gray-900">
                              {latestData.co2.toFixed(0)} ppm
                            </p>
                            <p className="text-xs text-gray-600">CO₂</p>
                          </div>
                        </div>
                        <div className="flex items-center space-x-2">
                          <Zap className="w-4 h-4 text-yellow-500" />
                          <div>
                            <p className="text-sm font-medium text-gray-900">
                              {latestData.power_consumption.toFixed(1)}W
                            </p>
                            <p className="text-xs text-gray-600">Power</p>
                          </div>
                        </div>
                      </div>

                      {/* Air Quality */}
                      <div className={`rounded-lg p-3 ${
                        isDarkMode ? 'bg-gray-700' : 'bg-gray-50'
                      }`}>
                        <div className="flex items-center justify-between">
                          <div className="flex items-center space-x-2">
                            <Wind className="w-4 h-4 text-blue-600" />
                            <span className={`text-sm font-medium transition-colors duration-300 ${
                              isDarkMode ? 'text-white' : 'text-gray-900'
                            }`}>Air Quality</span>
                          </div>
                          <span className={`text-sm font-bold ${airQuality.color}`}>
                            {deviceData.air_quality || 0} PPM
                          </span>
                        </div>
                        <p className={`text-xs mt-1 transition-colors duration-300 ${
                          isDarkMode ? 'text-gray-400' : 'text-gray-600'
                        }`}>{airQuality.status}</p>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          ) : (
            <div className="text-center py-12">
              <Wifi className="w-16 h-16 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-gray-900 mb-2">No ESP32 Devices Connected</h3>
              <p className="text-gray-600 mb-4">
                Connect your ESP32 devices to start receiving real-time environmental data.
              </p>
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 max-w-md mx-auto">
                <h4 className="font-medium text-blue-900 mb-2">Setup Instructions:</h4>
                <ol className="text-sm text-blue-800 text-left space-y-1">
                  <li>1. Upload the ESP32 firmware to your device</li>
                  <li>2. Configure WiFi credentials in the firmware</li>
                  <li>3. Connect sensors (DHT22, BME280, PMS5003, MH-Z19)</li>
                  <li>4. Start the backend server and MQTT broker</li>
                  <li>5. Power on the ESP32 device</li>
                </ol>
              </div>
            </div>
          )}
        </div>

        {/* Network Status Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <div className="bg-gradient-to-r from-orange-100 to-pink-100 border border-orange-200 rounded-xl p-6 relative">
            <div className="flex items-center justify-between mb-4">
              <Target className="w-8 h-8 text-orange-600" />
              <span className="bg-orange-200 text-orange-800 text-xs px-2 py-1 rounded-full">SLA</span>
            </div>
            <p className="text-3xl font-bold text-orange-600 mb-1">99.7%</p>
            <p className="text-sm text-orange-700 font-medium">Network Uptime</p>
            <p className="text-xs text-orange-600">Last 30 days</p>
          </div>

          <div className="bg-gradient-to-r from-teal-100 to-green-100 border border-teal-200 rounded-xl p-6 relative">
            <div className="flex items-center justify-between mb-4">
              <MessageCircle className="w-8 h-8 text-teal-600" />
              <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            </div>
            <p className="text-3xl font-bold text-teal-600 mb-1">MQTT</p>
            <p className="text-sm text-teal-700 font-medium">Protocol</p>
            <p className="text-xs text-teal-600">Secure TLS</p>
          </div>

          <div className="bg-gradient-to-r from-green-100 to-emerald-100 border border-green-200 rounded-xl p-6 relative">
            <div className="flex items-center justify-between mb-4">
              <Wifi className="w-8 h-8 text-green-600" />
              <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            </div>
            <p className="text-3xl font-bold text-green-600 mb-1">6</p>
            <p className="text-sm text-green-700 font-medium">Total Sensors</p>
            <p className="text-xs text-green-600">5 online</p>
          </div>

          <div className="bg-gradient-to-r from-blue-100 to-cyan-100 border border-blue-200 rounded-xl p-6 relative">
            <div className="flex items-center justify-between mb-4">
              <Zap className="w-8 h-8 text-blue-600" />
              <span className="bg-blue-200 text-blue-800 text-xs px-2 py-1 rounded-full">Live</span>
            </div>
            <p className="text-3xl font-bold text-blue-600 mb-1">2.4M</p>
            <p className="text-sm text-blue-700 font-medium">Data Points</p>
            <p className="text-xs text-blue-600">This month</p>
          </div>
        </div>

        {/* IoT Sensors */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-xl font-bold flex items-center">
              <Wifi className="w-5 h-5 text-blue-600 mr-2" />
              IoT Sensors
            </h3>
            <div className="flex space-x-2">
              <button 
                onClick={() => setSelectedView('grid')}
                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
                  selectedView === 'grid' 
                    ? 'bg-blue-600 text-white' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                <BarChart3 className="w-4 h-4 inline mr-1" />
                Grid View
              </button>
              <button 
                onClick={() => setSelectedView('list')}
                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
                  selectedView === 'list' 
                    ? 'bg-blue-600 text-white' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                <FileText className="w-4 h-4 inline mr-1" />
                List View
              </button>
            </div>
          </div>

          {selectedView === 'grid' && (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {[
                { name: 'Temperature Sensor', location: 'Living Room', status: 'Online', value: '22.5°C', icon: Thermometer, color: 'red' },
                { name: 'Humidity Sensor', location: 'Office', status: 'Online', value: '45%', icon: Droplet, color: 'blue' },
                { name: 'CO₂ Monitor', location: 'Kitchen', status: 'Online', value: '420 ppm', icon: Wind, color: 'green' },
                { name: 'Energy Monitor', location: 'Bedroom', status: 'Online', value: '2.3 kW', icon: Zap, color: 'yellow' },
                { name: 'Air Quality', location: 'Living Room', status: 'Online', value: 'Good', icon: Globe, color: 'purple' },
                { name: 'Water Leak', location: 'Bathroom', status: 'Offline', value: 'N/A', icon: Droplet, color: 'gray' }
              ].map((sensor, index) => (
                <div key={index} className="border rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer">
                  <div className="flex items-center justify-between mb-3">
                    <sensor.icon className={`w-6 h-6 text-${sensor.color}-600`} />
                    <span className={`text-xs px-2 py-1 rounded-full ${
                      sensor.status === 'Online' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      {sensor.status}
                    </span>
                  </div>
                  <h4 className="font-semibold text-gray-900 mb-1">{sensor.name}</h4>
                  <p className="text-sm text-gray-600 mb-2">{sensor.location}</p>
                  <p className="text-lg font-bold text-gray-900">{sensor.value}</p>
                </div>
              ))}
            </div>
          )}

          {selectedView === 'list' && (
            <div className="space-y-3">
              {[
                { name: 'Temperature Sensor', location: 'Living Room', status: 'Online', value: '22.5°C', lastUpdate: '2 min ago' },
                { name: 'Humidity Sensor', location: 'Office', status: 'Online', value: '45%', lastUpdate: '1 min ago' },
                { name: 'CO₂ Monitor', location: 'Kitchen', status: 'Online', value: '420 ppm', lastUpdate: '3 min ago' },
                { name: 'Energy Monitor', location: 'Bedroom', status: 'Online', value: '2.3 kW', lastUpdate: '1 min ago' },
                { name: 'Air Quality', location: 'Living Room', status: 'Online', value: 'Good', lastUpdate: '5 min ago' },
                { name: 'Water Leak', location: 'Bathroom', status: 'Offline', value: 'N/A', lastUpdate: '2 hours ago' }
              ].map((sensor, index) => (
                <div key={index} className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors">
                  <div className="flex items-center space-x-4">
                    <div className={`w-3 h-3 rounded-full ${
                      sensor.status === 'Online' ? 'bg-green-500' : 'bg-gray-400'
                    }`}></div>
                    <div>
                      <h4 className="font-semibold text-gray-900">{sensor.name}</h4>
                      <p className="text-sm text-gray-600">{sensor.location} • {sensor.lastUpdate}</p>
                    </div>
                  </div>
                  <div className="text-right">
                    <p className="font-semibold text-gray-900">{sensor.value}</p>
                    <span className={`text-xs px-2 py-1 rounded-full ${
                      sensor.status === 'Online' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      {sensor.status}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* Real-time Sensor Data Chart */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-xl font-bold">Real-time Sensor Data</h3>
            <div className="flex space-x-2">
              <button 
                onClick={() => setSelectedTimeRange('live')}
                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${
                  selectedTimeRange === 'live' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                Live
              </button>
              <button 
                onClick={() => setSelectedTimeRange('1h')}
                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${
                  selectedTimeRange === '1h' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                1H
              </button>
              <button 
                onClick={() => setSelectedTimeRange('24h')}
                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${
                  selectedTimeRange === '24h' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                24H
              </button>
            </div>
          </div>
          
          <div className="h-80">
            <LineChart width={800} height={300} data={sensorData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>
              <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
              <XAxis dataKey="time" />
              <YAxis domain={[0, 600]} />
              <Tooltip />
              <Legend />
              <Line 
                type="monotone" 
                dataKey="temperature" 
                stroke="#10b981" 
                strokeWidth={3}
                dot={{ fill: '#10b981', strokeWidth: 2, r: 4 }}
                name="Temperature (°C)"
              />
              <Line 
                type="monotone" 
                dataKey="humidity" 
                stroke="#3b82f6" 
                strokeWidth={3}
                dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}
                name="Humidity (%)"
              />
              <Line 
                type="monotone" 
                dataKey="co2" 
                stroke="#ef4444" 
                strokeWidth={3}
                dot={{ fill: '#ef4444', strokeWidth: 2, r: 4 }}
                name="CO₂ (ppm)"
              />
            </LineChart>
          </div>
        </div>

        {/* ESP32 Network Specifications */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <h3 className="text-xl font-bold mb-6 flex items-center">
            <div className="w-6 h-6 bg-gray-100 rounded-lg flex items-center justify-center mr-3">
              <Globe className="w-4 h-4 text-gray-600" />
            </div>
            ESP32 Network Specifications
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <div className="space-y-3">
              <h4 className="font-semibold text-gray-900">Hardware Platform</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>• ESP32-S3 Dual Core @ 240MHz</li>
                <li>• 8MB Flash, 512KB RAM</li>
                <li>• WiFi 802.11 b/g/n + Bluetooth 5.0</li>
                <li>• 12-bit ADC, multiple GPIO pins</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h4 className="font-semibold text-gray-900">Communication</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>• MQTT over TLS 1.3</li>
                <li>• JSON payload format</li>
                <li>• OTA firmware updates</li>
                <li>• Mesh networking support</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h4 className="font-semibold text-gray-900">Sensors & I/O</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>• BME280 (Temp/Humidity/Pressure)</li>
                <li>• SCD30 (CO₂), PMS5003 (PM2.5)</li>
                <li>• Current transformers (Energy)</li>
                <li>• Waterproof IP65 enclosures</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h4 className="font-semibold text-gray-900">Power Management</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>• 18650 LiPo batteries (3.7V)</li>
                <li>• Solar charging capability</li>
                <li>• Deep sleep mode (10µA)</li>
                <li>• Low battery alerts via MQTT</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Network Performance */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <h3 className="text-xl font-bold mb-6 flex items-center">
            <BarChart3 className="w-5 h-5 text-purple-600 mr-2" />
            Network Performance
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="space-y-4">
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Signal Strength</span>
                  <span className="font-semibold">-48 dBm</span>
                </div>
                <div className="progress-bar">
                  <div className="progress-fill" style={{width: '85%', background: 'linear-gradient(90deg, #8b5cf6, #7c3aed)'}}></div>
                </div>
              </div>
              
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Data Throughput</span>
                  <span className="font-semibold">2.4 Mbps</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-blue-600 h-2 rounded-full" style={{width: '75%'}}></div>
                </div>
              </div>
            </div>
            
            <div className="space-y-4">
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Packet Loss</span>
                  <span className="font-semibold text-green-600">0.1%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-green-600 h-2 rounded-full" style={{width: '95%'}}></div>
                </div>
              </div>
              
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Latency</span>
                  <span className="font-semibold">12ms</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-yellow-600 h-2 rounded-full" style={{width: '88%'}}></div>
                </div>
              </div>
            </div>
            
            <div className="space-y-4">
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Battery Life</span>
                  <span className="font-semibold">18 days</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-orange-600 h-2 rounded-full" style={{width: '72%'}}></div>
                </div>
              </div>
              
              <div>
                <div className="flex justify-between text-sm mb-1">
                  <span>Uptime</span>
                  <span className="font-semibold text-green-600">99.7%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div className="bg-green-600 h-2 rounded-full" style={{width: '99%'}}></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
  );
  };

  const SupportTab = () => {
    const supportInputRef = React.useRef(null);
    
    React.useEffect(() => {
      if (supportInputRef.current) {
        supportInputRef.current.focus();
      }
    }, []);

    return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-600 via-green-600 to-teal-600 p-8 rounded-xl text-white">
        <h2 className="text-2xl font-bold mb-2">🛟 Support Center</h2>
        <p className="opacity-90">Get help with carbon tracking and sustainability features</p>
      </div>
      
      <div className="bg-white rounded-xl shadow-sm border">
        <div className="p-6">
          <h3 className="text-lg font-semibold mb-4">💬 Chat with Support</h3>
          <div className="h-64 overflow-y-auto p-4 space-y-3 bg-gray-50 rounded-lg">
            {supportMessages.map((msg) => (
              <div key={msg.id} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                <div className={`max-w-xs lg:max-w-lg xl:max-w-xl ${
                  msg.sender === 'user' 
                    ? 'bg-blue-600 text-white rounded-l-2xl rounded-tr-2xl' 
                    : 'bg-white border border-green-200 text-gray-800 rounded-r-2xl rounded-tl-2xl shadow-sm'
                } p-4 space-y-2`}>
                  <div className="text-sm leading-relaxed">{msg.text}</div>
                  <p className={`text-xs ${msg.sender === 'user' ? 'text-blue-200' : 'text-gray-400'}`}>
                    {msg.timestamp}
                  </p>
                </div>
              </div>
            ))}
          </div>
          
          <div className="mt-4">
              <form onSubmit={sendSupportMessage} className="flex space-x-3">
              <input
                  ref={supportInputRef}
                type="text"
                value={supportMessage}
                onChange={(e) => setSupportMessage(e.target.value)}
                placeholder="Ask about carbon tracking, IoT sensors, or any sustainability question..."
                  className="flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                  autoComplete="off"
              />
              <button
                  type="submit"
                disabled={!supportMessage.trim()}
                  className="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                Send
              </button>
              </form>
          </div>
        </div>
      </div>

      {/* PDF Report Generation */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold flex items-center">
            <FileText className="w-5 h-5 text-blue-600 mr-2" />
            Generate IoT Report
          </h3>
        </div>
        <div className="flex justify-center">
          <button
            onClick={() => {
              try {
                const doc = generateIoTSensorReport();
                doc.save(`iot-sensor-report-${new Date().toISOString().slice(0,10)}.pdf`);
              } catch (error) {
                console.error('Error generating PDF:', error);
                alert('Error generating PDF. Please try again.');
              }
            }}
            className="flex items-center justify-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            <Download className="w-5 h-5" />
            <span className="font-medium">Download IoT Sensor Report</span>
          </button>
        </div>
      </div>
    </div>
  );
  };

  const Integrations = () => (
    <div className="space-y-8">
      {/* Header */}
      <div className="bg-gradient-to-r from-violet-600 to-purple-600 p-8 rounded-xl text-white">
        <h2 className="text-3xl font-bold mb-2">Integrations Hub</h2>
        <p className="text-lg opacity-90">Connect EcoAtlas AI with your smart devices and business tools</p>
      </div>

      {/* Available Integrations */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-2xl font-bold mb-6">Available Integrations</h3>
        
        {/* Smart Home */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-4">
            <h4 className="text-lg font-semibold">Smart Home</h4>
            <span className="text-sm text-gray-600">3/5 connected</span>
        </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center">
                    <Thermometer className="w-5 h-5 text-red-600" />
        </div>
                  <div>
                    <h5 className="font-semibold">Nest Thermostat</h5>
                    <p className="text-sm text-gray-600">HVAC usage</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-xs text-gray-500">2 mins ago</span>
                </div>
              </div>
              <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg text-sm hover:bg-gray-200 transition-colors">
                Settings
              </button>
            </div>

            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                    <Lightbulb className="w-5 h-5 text-yellow-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">Philips Hue</h5>
                    <p className="text-sm text-gray-600">Lighting usage</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-xs text-gray-500">5 mins ago</span>
                </div>
              </div>
              <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg text-sm hover:bg-gray-200 transition-colors">
                Settings
              </button>
            </div>

            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                    <Zap className="w-5 h-5 text-blue-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">Smart Meters</h5>
                    <p className="text-sm text-gray-600">Energy consumption</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-xs text-gray-500">1 min ago</span>
                </div>
              </div>
              <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg text-sm hover:bg-gray-200 transition-colors">
                Settings
              </button>
            </div>

            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
                    <Users className="w-5 h-5 text-gray-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">Ring Doorbell</h5>
                    <p className="text-sm text-gray-600">Motion & person</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-gray-400 rounded-full"></div>
                  <span className="text-xs text-gray-500">Not connected</span>
                </div>
              </div>
              <button className="w-full bg-green-600 text-white py-2 px-4 rounded-lg text-sm hover:bg-green-700 transition-colors">
                Connect
              </button>
            </div>
          </div>
        </div>

        {/* Transportation */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-4">
            <h4 className="text-lg font-semibold">Transportation</h4>
            <span className="text-sm text-gray-600">3/5 connected</span>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center">
                    <Car className="w-5 h-5 text-red-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">Tesla Model S</h5>
                    <p className="text-sm text-gray-600">Driving & charging</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-xs text-gray-500">5 mins ago</span>
                </div>
              </div>
              <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg text-sm hover:bg-gray-200 transition-colors">
                Settings
              </button>
            </div>

            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                    <Car className="w-5 h-5 text-green-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">Uber/Lyft</h5>
                    <p className="text-sm text-gray-600">Ride history</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-xs text-gray-500">1 hour ago</span>
                </div>
              </div>
              <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg text-sm hover:bg-gray-200 transition-colors">
                Settings
              </button>
            </div>

            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                    <Globe className="w-5 h-5 text-blue-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">Google Maps</h5>
                    <p className="text-sm text-gray-600">Location & routes</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-xs text-gray-500">1 min ago</span>
                </div>
              </div>
              <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg text-sm hover:bg-gray-200 transition-colors">
                Settings
              </button>
            </div>

            <div className="border rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
                    <Zap className="w-5 h-5 text-gray-600" />
                  </div>
                  <div>
                    <h5 className="font-semibold">ChargePoint</h5>
                    <p className="text-sm text-gray-600">Charging sessions</p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-gray-400 rounded-full"></div>
                  <span className="text-xs text-gray-500">Not connected</span>
                </div>
              </div>
              <button className="w-full bg-green-600 text-white py-2 px-4 rounded-lg text-sm hover:bg-green-700 transition-colors">
                Connect
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Data Flow Overview */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-2xl font-bold mb-6">Data Flow Overview</h3>
        <div className="space-y-4">
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">Smart Meter</h4>
              <p className="text-sm text-gray-600">Energy Usage - Every 15 mins</p>
              <p className="text-sm text-gray-500">2.3K readings/day</p>
            </div>
            <div className="text-right">
              <p className="text-sm font-semibold text-green-600">Accuracy 99.8%</p>
              <button className="text-blue-600 text-sm hover:underline">View Details</button>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">Tesla API</h4>
              <p className="text-sm text-gray-600">Driving & Charging - Real time</p>
              <p className="text-sm text-gray-500">260 mins/day</p>
            </div>
            <div className="text-right">
              <p className="text-sm font-semibold text-green-600">Accuracy 99.2%</p>
              <button className="text-blue-600 text-sm hover:underline">View Details</button>
            </div>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div>
              <h4 className="font-semibold">Apple Health</h4>
              <p className="text-sm text-gray-600">Walking/Cycling - Daily</p>
              <p className="text-sm text-gray-500">17 workouts/week</p>
            </div>
            <div className="text-right">
              <p className="text-sm font-semibold text-green-600">Accuracy 97.7%</p>
              <button className="text-blue-600 text-sm hover:underline">View Details</button>
            </div>
          </div>
        </div>
      </div>

      {/* Data Quality Score */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-2xl font-bold mb-4">Data Quality Score</h3>
        <p className="text-gray-600 mb-4">Excellent data quality across all sources</p>
        <div className="flex items-center space-x-4">
          <div className="flex-1 bg-gray-200 rounded-full h-3">
            <div className="bg-blue-600 h-3 rounded-full" style={{width: '94%'}}></div>
          </div>
          <span className="text-2xl font-bold text-blue-600">94%</span>
        </div>
      </div>

      {/* Integration Marketplace */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-2xl font-bold mb-6">Integration Marketplace</h3>
        <div className="space-y-4">
          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                <Globe className="w-6 h-6 text-blue-600" />
              </div>
              <div>
                <h4 className="font-semibold">Amazon Alexa</h4>
                <p className="text-sm text-gray-600">Voice control for carbon tracking</p>
                <div className="flex items-center space-x-2 mt-1">
                  <div className="flex items-center">
                    <Star className="w-4 h-4 text-yellow-400 fill-current" />
                    <span className="text-sm text-gray-600 ml-1">4.8</span>
                  </div>
                  <span className="text-sm text-gray-500">•</span>
                  <span className="text-sm text-gray-600">7.5K users</span>
                  <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">Popular</span>
                </div>
              </div>
            </div>
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
              Add
            </button>
          </div>

          <div className="flex items-center justify-between p-4 border rounded-lg">
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
                <Zap className="w-6 h-6 text-purple-600" />
              </div>
              <div>
                <h4 className="font-semibold">IFTTT Automation</h4>
                <p className="text-sm text-gray-600">Automate carbon tracking workflows</p>
                <div className="flex items-center space-x-2 mt-1">
                  <div className="flex items-center">
                    <Star className="w-4 h-4 text-yellow-400 fill-current" />
                    <span className="text-sm text-gray-600 ml-1">4.6</span>
                  </div>
                  <span className="text-sm text-gray-500">•</span>
                  <span className="text-sm text-gray-600">1.8K users</span>
                  <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">Popular</span>
                </div>
              </div>
            </div>
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
              Add
            </button>
          </div>

          <div className="text-center">
            <button className="text-blue-600 hover:underline">Browse all integrations (87 available)</button>
          </div>
        </div>
      </div>

      {/* Developer API Access */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-2xl font-bold mb-6">Developer API Access</h3>
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div>
            <h4 className="text-lg font-semibold mb-4">API Information</h4>
            <p className="text-gray-600 mb-4">Build custom integrations with our comprehensive API, access real-time carbon data, set up webhooks, and create automated workflows.</p>
            <ul className="space-y-2 text-sm text-gray-600">
              <li>• RESTful API with OAuth 2.0</li>
              <li>• Real-time WebSockets connections</li>
              <li>• Comprehensive documentation</li>
              <li>• SDK for Python, NodeJS, PHP</li>
            </ul>
          </div>
          <div>
            <h4 className="text-lg font-semibold mb-4">Your API Configuration</h4>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">API Key</label>
                <div className="flex items-center space-x-2">
                  <input type="text" value="xxx_7_xxx_xxx_123456789abcdef" className="flex-1 p-2 border border-gray-300 rounded-lg text-sm" readOnly />
                  <button className="text-blue-600 text-sm hover:underline">Copy</button>
                </div>
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Rate Limit</label>
                  <p className="text-sm text-gray-600">10,000/hour</p>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Usage This Month</label>
                  <p className="text-sm text-gray-600">2,654 requests</p>
                </div>
              </div>
              <div className="flex space-x-2">
                <button className="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-blue-700 transition-colors">
                  View Docs
                </button>
                <button className="border border-gray-300 text-gray-700 px-4 py-2 rounded-lg text-sm hover:bg-gray-50 transition-colors">
                  Test API
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Custom Integration Request */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-2xl font-bold mb-4">Custom Integration Request</h3>
        <p className="text-gray-600 mb-6">Don't see your device or service listed? We're constantly adding new integrations. Request a custom integration and our team will prioritize based on community demand.</p>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
          <div>
            <h4 className="font-semibold mb-3">Most Requested</h4>
            <ul className="space-y-2 text-sm">
              <li>• Home Assistant (784 votes)</li>
              <li>• Peloton Bike (588 votes)</li>
              <li>• Tesla Power (748 votes)</li>
            </ul>
          </div>
          <div>
            <h4 className="font-semibold mb-3">In Development</h4>
            <ul className="space-y-2 text-sm">
              <li>• Honeywell Thermostat</li>
              <li>• Ford Mustang Mach-E</li>
              <li>• Oura Ring</li>
            </ul>
          </div>
          <div>
            <h4 className="font-semibold mb-3">Recently Added</h4>
            <ul className="space-y-2 text-sm">
              <li>• Ring Video Doorbell</li>
              <li>• Ecobee Smart Thermostat</li>
              <li>• Roku RTT</li>
            </ul>
          </div>
        </div>

        <div className="flex space-x-4">
          <button className="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-colors">
            Request Integration
          </button>
          <button className="border border-purple-600 text-purple-600 px-6 py-2 rounded-lg hover:bg-purple-50 transition-colors">
            Browse Roadmap
          </button>
        </div>
      </div>
    </div>
  );

  const SettingsPage = () => {
    const { isDarkMode } = useTheme();
    
    return (
      <div className="space-y-8">
        {/* Header */}
        <div className={`p-8 rounded-2xl text-white relative overflow-hidden ${
          isDarkMode 
            ? 'bg-gradient-to-r from-gray-800 to-gray-900' 
            : 'bg-gradient-to-r from-slate-700 to-gray-700'
        }`}>
          <div className="absolute inset-0 bg-gradient-to-r from-green-600/20 to-blue-600/20"></div>
          <div className="absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32"></div>
          <div className="absolute bottom-0 left-0 w-48 h-48 bg-white/10 rounded-full translate-y-24 -translate-x-24"></div>
          
          <div className="relative z-10">
            <div className="flex items-center space-x-4 mb-4">
              <div className="p-3 bg-white/20 backdrop-blur-sm rounded-xl">
                <Settings className="w-8 h-8" />
              </div>
              <div>
                <h2 className="text-3xl font-bold">Settings & Preferences</h2>
                <p className="text-lg opacity-90">Customize your EcoAtlas AI experience</p>
              </div>
            </div>
          </div>
        </div>

        {/* Theme Selector */}
        <div className={`p-6 rounded-xl shadow-sm border transition-colors duration-300 ${
          isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
        }`}>
          <ThemeSelector />
        </div>

        {/* Settings Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Account Settings */}
          <div className={`p-6 rounded-xl shadow-sm border transition-colors duration-300 ${
            isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
          }`}>
            <div className="flex items-center space-x-3 mb-6">
              <div className="p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg">
                <Users className="w-5 h-5 text-blue-600 dark:text-blue-400" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Account Settings</h3>
                <p className="text-sm text-gray-600 dark:text-gray-400">Manage your profile information</p>
              </div>
            </div>
            
            <div className="space-y-4">
              <div>
                <label className={`block text-sm font-medium mb-2 transition-colors duration-300 ${
                  isDarkMode ? 'text-gray-300' : 'text-gray-700'
                }`}>Full Name</label>
                <input
                  type="text"
                  defaultValue={user?.realName || user?.name || 'User'}
                  className={`w-full p-3 rounded-lg border transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    isDarkMode 
                      ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' 
                      : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'
                  }`}
                />
              </div>
              <div>
                <label className={`block text-sm font-medium mb-2 transition-colors duration-300 ${
                  isDarkMode ? 'text-gray-300' : 'text-gray-700'
                }`}>Email Address</label>
                <input
                  type="email"
                  defaultValue={user?.email || 'user@example.com'}
                  className={`w-full p-3 rounded-lg border transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    isDarkMode 
                      ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' 
                      : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'
                  }`}
                />
              </div>
              <div>
                <label className={`block text-sm font-medium mb-2 transition-colors duration-300 ${
                  isDarkMode ? 'text-gray-300' : 'text-gray-700'
                }`}>Organization</label>
                <input
                  type="text"
                  placeholder="Your company or organization"
                  className={`w-full p-3 rounded-lg border transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    isDarkMode 
                      ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' 
                      : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'
                  }`}
                />
              </div>
            </div>
            
            <div className="mt-6 pt-4 border-t border-gray-200 dark:border-gray-700">
              <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                Save Changes
              </button>
            </div>
          </div>

          {/* Notifications */}
          <div className={`p-6 rounded-xl shadow-sm border transition-colors duration-300 ${
            isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
          }`}>
            <div className="flex items-center space-x-3 mb-6">
              <div className="p-2 bg-green-100 dark:bg-green-900/30 rounded-lg">
                <Bell className="w-5 h-5 text-green-600 dark:text-green-400" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Notifications</h3>
                <p className="text-sm text-gray-600 dark:text-gray-400">Control how you receive updates</p>
              </div>
            </div>
            
            <div className="space-y-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className={`font-medium transition-colors duration-300 ${
                    isDarkMode ? 'text-white' : 'text-gray-900'
                  }`}>Email Notifications</p>
                  <p className={`text-sm transition-colors duration-300 ${
                    isDarkMode ? 'text-gray-400' : 'text-gray-600'
                  }`}>Receive updates via email</p>
                </div>
                <button className="relative inline-flex h-6 w-11 items-center rounded-full bg-green-600 transition-colors">
                  <span className="inline-block h-4 w-4 transform rounded-full bg-white translate-x-6 transition-transform" />
                </button>
              </div>
              
              <div className="flex items-center justify-between">
                <div>
                  <p className={`font-medium transition-colors duration-300 ${
                    isDarkMode ? 'text-white' : 'text-gray-900'
                  }`}>Push Notifications</p>
                  <p className={`text-sm transition-colors duration-300 ${
                    isDarkMode ? 'text-gray-400' : 'text-gray-600'
                  }`}>Browser push notifications</p>
                </div>
                <button className="relative inline-flex h-6 w-11 items-center rounded-full bg-gray-200 dark:bg-gray-600 transition-colors">
                  <span className="inline-block h-4 w-4 transform rounded-full bg-white translate-x-1 transition-transform" />
                </button>
              </div>
              
              <div className="flex items-center justify-between">
                <div>
                  <p className={`font-medium transition-colors duration-300 ${
                    isDarkMode ? 'text-white' : 'text-gray-900'
                  }`}>Weekly Reports</p>
                  <p className={`text-sm transition-colors duration-300 ${
                    isDarkMode ? 'text-gray-400' : 'text-gray-600'
                  }`}>Get weekly carbon footprint summaries</p>
                </div>
                <button className="relative inline-flex h-6 w-11 items-center rounded-full bg-green-600 transition-colors">
                  <span className="inline-block h-4 w-4 transform rounded-full bg-white translate-x-6 transition-transform" />
                </button>
              </div>
            </div>
          </div>

          {/* Privacy & Security */}
          <div className={`p-6 rounded-xl shadow-sm border transition-colors duration-300 ${
            isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
          }`}>
            <div className="flex items-center space-x-3 mb-6">
              <div className="p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg">
                <Key className="w-5 h-5 text-purple-600 dark:text-purple-400" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Privacy & Security</h3>
                <p className="text-sm text-gray-600 dark:text-gray-400">Manage your data and security</p>
              </div>
            </div>
            
            <div className="space-y-4">
              <button className={`w-full p-3 rounded-lg border transition-colors duration-300 text-left ${
                isDarkMode 
                  ? 'border-gray-600 hover:bg-gray-700 text-white' 
                  : 'border-gray-300 hover:bg-gray-50 text-gray-900'
              }`}>
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium">Change Password</p>
                    <p className={`text-sm ${
                      isDarkMode ? 'text-gray-400' : 'text-gray-600'
                    }`}>Update your account password</p>
                  </div>
                  <Settings className="w-4 h-4" />
                </div>
              </button>
              
              <button className={`w-full p-3 rounded-lg border transition-colors duration-300 text-left ${
                isDarkMode 
                  ? 'border-gray-600 hover:bg-gray-700 text-white' 
                  : 'border-gray-300 hover:bg-gray-50 text-gray-900'
              }`}>
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium">Two-Factor Authentication</p>
                    <p className={`text-sm ${
                      isDarkMode ? 'text-gray-400' : 'text-gray-600'
                    }`}>Add an extra layer of security</p>
                  </div>
                  <Settings className="w-4 h-4" />
                </div>
              </button>
              
              <button className={`w-full p-3 rounded-lg border transition-colors duration-300 text-left ${
                isDarkMode 
                  ? 'border-gray-600 hover:bg-gray-700 text-white' 
                  : 'border-gray-300 hover:bg-gray-50 text-gray-900'
              }`}>
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium">Data Export</p>
                    <p className={`text-sm ${
                      isDarkMode ? 'text-gray-400' : 'text-gray-600'
                    }`}>Download your carbon data</p>
                  </div>
                  <Download className="w-4 h-4" />
                </div>
              </button>
            </div>
          </div>

          {/* App Preferences */}
          <div className={`p-6 rounded-xl shadow-sm border transition-colors duration-300 ${
            isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
          }`}>
            <div className="flex items-center space-x-3 mb-6">
              <div className="p-2 bg-orange-100 dark:bg-orange-900/30 rounded-lg">
                <Settings className="w-5 h-5 text-orange-600 dark:text-orange-400" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">App Preferences</h3>
                <p className="text-sm text-gray-600 dark:text-gray-400">Customize your app experience</p>
              </div>
            </div>
            
            <div className="space-y-4">
              <div>
                <label className={`block text-sm font-medium mb-2 transition-colors duration-300 ${
                  isDarkMode ? 'text-gray-300' : 'text-gray-700'
                }`}>Default Dashboard View</label>
                <select className={`w-full p-3 rounded-lg border transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white' 
                    : 'bg-white border-gray-300 text-gray-900'
                }`}>
                  <option>Overview</option>
                  <option>Detailed Analytics</option>
                  <option>Quick Stats</option>
                </select>
              </div>
              
              <div>
                <label className={`block text-sm font-medium mb-2 transition-colors duration-300 ${
                  isDarkMode ? 'text-gray-300' : 'text-gray-700'
                }`}>Units</label>
                <select className={`w-full p-3 rounded-lg border transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white' 
                    : 'bg-white border-gray-300 text-gray-900'
                }`}>
                  <option>Metric (kg, km, °C)</option>
                  <option>Imperial (lbs, miles, °F)</option>
                </select>
              </div>
              
              <div className="flex items-center justify-between">
                <div>
                  <p className={`font-medium transition-colors duration-300 ${
                    isDarkMode ? 'text-white' : 'text-gray-900'
                  }`}>Auto-save Data</p>
                  <p className={`text-sm transition-colors duration-300 ${
                    isDarkMode ? 'text-gray-400' : 'text-gray-600'
                  }`}>Automatically save your entries</p>
                </div>
                <button className="relative inline-flex h-6 w-11 items-center rounded-full bg-green-600 transition-colors">
                  <span className="inline-block h-4 w-4 transform rounded-full bg-white translate-x-6 transition-transform" />
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  const AboutPage = () => (
    <div className="space-y-6">
      {/* Hero Banner */}
      <div className="bg-gradient-to-r from-emerald-600 to-blue-600 p-8 rounded-xl text-white relative overflow-hidden">
        <div className="absolute -translate-y-32 translate-x-32 right-0 top-0 w-64 h-64 bg-white/10 rounded-full"></div>
        <div className="absolute translate-y-24 -translate-x-24 left-0 bottom-0 w-48 h-48 bg-white/10 rounded-full"></div>
        <div className="relative z-10 text-center">
          <div className="flex items-center justify-center mb-4">
            <EcoAtlasLogo className="w-12 h-12 mr-3" />
            <div className="w-0.5 h-10 bg-white/50 mx-2"></div>
            <h1 className="text-3xl font-bold ml-2">EcoAtlas AI</h1>
      </div>
          <h2 className="text-2xl font-bold mb-4">Pioneering the Future of Carbon Intelligence</h2>
          <p className="text-lg opacity-90 max-w-4xl mx-auto">
            Empowering individuals, businesses, and communities worldwide to track, understand, and dramatically reduce their carbon footprint through cutting-edge AI technology and innovative IoT solutions.
          </p>
        </div>
      </div>

      {/* Mission & Vision */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center mb-4">
            <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center mr-3">
              <Target className="w-5 h-5 text-green-600" />
            </div>
            <h3 className="text-xl font-bold text-gray-900">Our Mission</h3>
          </div>
          <p className="text-gray-600">
            To democratize carbon tracking and make environmental responsibility accessible to everyone. We're building the world's most comprehensive platform that transforms complex climate data into actionable insights, empowering users to make meaningful impact in the fight against climate change.
          </p>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border">
          <div className="flex items-center mb-4">
            <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3">
              <Eye className="w-5 h-5 text-blue-600" />
            </div>
            <h3 className="text-xl font-bold text-gray-900">Our Vision</h3>
          </div>
          <p className="text-gray-600">
            To create a world where every decision is climate-conscious. By 2030, we envision EcoAtlas AI as the global standard for carbon intelligence, helping reduce 100 million tons of CO2 emissions worldwide through our platform and community of eco-warriors.
          </p>
        </div>
      </div>

      {/* Our Values */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <div className="flex items-center mb-6">
          <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mr-3">
            <Award className="w-5 h-5 text-purple-600" />
          </div>
          <h3 className="text-2xl font-bold text-gray-900">Our Values</h3>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="flex items-center space-x-3">
            <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            <span className="text-gray-700">Transparency in all environmental data</span>
          </div>
          <div className="flex items-center space-x-3">
            <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
            <span className="text-gray-700">Innovation through AI and technology</span>
          </div>
          <div className="flex items-center space-x-3">
            <div className="w-3 h-3 bg-purple-500 rounded-full"></div>
            <span className="text-gray-700">Community-driven climate action</span>
          </div>
          <div className="flex items-center space-x-3">
            <div className="w-3 h-3 bg-orange-500 rounded-full"></div>
            <span className="text-gray-700">Accessibility for all users</span>
          </div>
        </div>
      </div>

      {/* Leadership Team */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <div className="flex items-center mb-6">
          <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mr-3">
            <Users className="w-5 h-5 text-purple-600" />
          </div>
          <div>
            <h3 className="text-2xl font-bold text-gray-900">Leadership Team</h3>
            <p className="text-gray-600">Meet the visionary leaders driving EcoAtlas AI forward</p>
          </div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        <div className="text-center">
            <div className="w-24 h-24 bg-gradient-to-br from-green-500 to-teal-500 rounded-xl flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4">
              YA
            </div>
            <h4 className="text-xl font-bold text-gray-900 mb-2">Yassin Alaaeldin</h4>
            <p className="text-green-600 font-semibold mb-3">Co-Founder & CEO</p>
            <p className="text-gray-600 text-sm">
              AI & Machine Learning expert with 8+ years in environmental technology. Passionate about democratizing carbon intelligence and building sustainable futures through innovation.
            </p>
            <div className="flex justify-center space-x-2 mt-4">
              <div className="w-6 h-6 bg-orange-100 rounded flex items-center justify-center">💼</div>
              <div className="w-6 h-6 bg-green-100 rounded flex items-center justify-center">🌱</div>
          </div>
          </div>
          <div className="text-center">
            <div className="w-24 h-24 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4">AM</div>
            <h4 className="text-xl font-bold text-gray-900 mb-2">Ali Mahdi</h4>
            <p className="text-blue-600 font-semibold mb-3">Co-Founder & CTO</p>
            <p className="text-gray-600 text-sm">
              IoT systems architect and full-stack developer. Specializes in building scalable platforms that seamlessly integrate hardware and software for real-time environmental monitoring.
            </p>
            <div className="flex justify-center space-x-2 mt-4">
              <div className="w-6 h-6 bg-orange-100 rounded flex items-center justify-center">⚡</div>
              <div className="w-6 h-6 bg-purple-100 rounded flex items-center justify-center">🌿</div>
            </div>
          </div>
          <div className="text-center">
            <div className="w-24 h-24 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4">AH</div>
            <h4 className="text-xl font-bold text-gray-900 mb-2">Ahmed Hennawi</h4>
            <p className="text-purple-600 font-semibold mb-3">Co-Founder & COO</p>
            <p className="text-gray-600 text-sm">
              Business strategist and sustainability expert. Leads operations and partnerships to scale EcoAtlas AI globally while maintaining focus on environmental impact and user experience.
            </p>
            <div className="flex justify-center space-x-2 mt-4">
              <div className="w-6 h-6 bg-orange-100 rounded flex items-center justify-center">📈</div>
              <div className="w-6 h-6 bg-green-100 rounded flex items-center justify-center">🌍</div>
            </div>
          </div>
        </div>
      </div>

      {/* Platform Capabilities */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <div className="flex items-center mb-6">
          <div className="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center mr-3">
            <span className="text-red-600">🚀</span>
          </div>
          <h3 className="text-2xl font-bold text-gray-900">Platform Capabilities</h3>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <div className="text-center">
            <div className="w-16 h-16 bg-green-500 rounded-xl flex items-center justify-center text-white text-2xl mx-auto mb-3">🌐</div>
            <h4 className="font-bold text-gray-900 mb-2">Real-time IoT Monitoring</h4>
            <p className="text-gray-600 text-sm">ESP32-powered sensor networks providing 24/7 environmental data collection.</p>
          </div>
          <div className="text-center">
            <div className="w-16 h-16 bg-blue-500 rounded-xl flex items-center justify-center text-white text-2xl mx-auto mb-3">🤖</div>
            <h4 className="font-bold text-gray-900 mb-2">AI Carbon Assistant</h4>
            <p className="text-gray-600 text-sm">Advanced machine learning models for personalized carbon reduction recommendations.</p>
          </div>
          <div className="text-center">
            <div className="w-16 h-16 bg-purple-500 rounded-xl flex items-center justify-center text-white text-2xl mx-auto mb-3">📊</div>
            <h4 className="font-bold text-gray-900 mb-2">Analytics Dashboard</h4>
            <p className="text-gray-600 text-sm">Comprehensive insights and reporting for individuals and organizations.</p>
          </div>
        </div>
      </div>

      {/* Stats */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center">
          <div className="text-3xl font-bold text-green-600 mb-2">50K+</div>
          <div className="text-gray-600 mb-1">Active Users</div>
          <div className="text-sm text-green-600">Growing daily</div>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center">
          <div className="text-3xl font-bold text-blue-600 mb-2">2.1M</div>
          <div className="text-gray-600 mb-1">Tons CO₂ Tracked</div>
          <div className="text-sm text-blue-600">Since 2024</div>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border text-center">
          <div className="text-3xl font-bold text-purple-600 mb-2">85%</div>
          <div className="text-gray-600 mb-1">Avg. Reduction</div>
          <div className="text-sm text-purple-600">User success rate</div>
        </div>
      </div>

      {/* Future Roadmap */}
      <div className="bg-white p-6 rounded-xl shadow-sm border">
        <div className="flex items-center mb-6">
          <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center mr-3">
            <span className="text-orange-600">🗺️</span>
          </div>
          <h3 className="text-2xl font-bold text-gray-900">Future Roadmap</h3>
        </div>
        <div className="space-y-4">
          <div className="flex items-start space-x-4">
            <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-bold">Q4</div>
            <div>
              <h4 className="font-bold text-gray-900">AI Carbon Assistant 2.0</h4>
              <ul className="text-sm text-gray-600 mt-1 space-y-1">
                <li>• Advanced predictive modeling</li>
                <li>• Voice-activated commands</li>
                <li>• Personalized action plans</li>
                <li>• Integration with 50+ devices</li>
              </ul>
            </div>
          </div>
          <div className="flex items-start space-x-4">
            <div className="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white text-sm font-bold">Q1</div>
            <div>
              <h4 className="font-bold text-gray-900">Global Carbon Exchange</h4>
              <ul className="text-sm text-gray-600 mt-1 space-y-1">
                <li>• Peer-to-peer carbon trading</li>
                <li>• Blockchain verification</li>
                <li>• Corporate partnerships</li>
                <li>• Real-time offset marketplace</li>
              </ul>
            </div>
          </div>
          <div className="flex items-start space-x-4">
            <div className="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold">Q3</div>
            <div>
              <h4 className="font-bold text-gray-900">Smart City Integration</h4>
              <ul className="text-sm text-gray-600 mt-1 space-y-1">
                <li>• Municipal partnerships</li>
                <li>• City-wide sensor networks</li>
                <li>• Public transport integration</li>
                <li>• Community challenges</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      {/* Contact Info */}
      <div className="bg-green-50 p-6 rounded-xl border border-green-200">
        <div className="flex items-center mb-6">
          <div className="w-10 h-10 bg-pink-100 rounded-full flex items-center justify-center mr-3">
            <span className="text-pink-600">📞</span>
          </div>
          <h3 className="text-2xl font-bold text-gray-900">Get In Touch</h3>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <div className="text-center">
            <div className="w-12 h-12 bg-green-500 rounded-lg flex items-center justify-center text-white text-xl mx-auto mb-3">📧</div>
            <h4 className="font-bold text-gray-900 mb-1">Email</h4>
            <p className="text-sm text-gray-600 mb-1">ecoatlas.real@gmail.com</p>
            <p className="text-xs text-gray-500">General inquiries & support</p>
            </div>
            <div className="text-center">
            <div className="w-12 h-12 bg-blue-500 rounded-lg flex items-center justify-center text-white text-xl mx-auto mb-3">💼</div>
            <h4 className="font-bold text-gray-900 mb-1">Business</h4>
            <p className="text-sm text-gray-600 mb-1">nyhnetzeroai@gmail.com</p>
            <p className="text-xs text-gray-500">Partnerships & enterprise solutions</p>
            </div>
            <div className="text-center">
            <div className="w-12 h-12 bg-purple-500 rounded-lg flex items-center justify-center text-white text-xl mx-auto mb-3">📱</div>
            <h4 className="font-bold text-gray-900 mb-1">Phone</h4>
            <p className="text-sm text-gray-600 mb-1">+971 58 610 4313</p>
            <p className="text-xs text-gray-500">UAE Direct Line</p>
            </div>
          <div className="text-center">
            <div className="w-12 h-12 bg-orange-500 rounded-lg flex items-center justify-center text-white text-xl mx-auto mb-3">💬</div>
            <h4 className="font-bold text-gray-900 mb-1">WhatsApp</h4>
            <p className="text-sm text-gray-600 mb-1">+971 58 610 4313</p>
            <p className="text-xs text-gray-500">Quick support & inquiries</p>
          </div>
        </div>
      </div>
    </div>
  );

  const AIChat = () => {
    const inputRef = React.useRef(null);
    
    React.useEffect(() => {
      if (showAIChat && inputRef.current) {
        inputRef.current.focus();
      }
    }, [showAIChat]);

    return (
    <div className={`fixed bottom-20 right-6 w-80 h-96 bg-white rounded-xl shadow-2xl border transition-all duration-300 ${showAIChat ? 'scale-100 opacity-100' : 'scale-0 opacity-0'}`}>
      <div className="flex items-center justify-between p-4 border-b">
        <div className="flex items-center space-x-2">
          <div className="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">
            <MessageCircle className="w-4 h-4 text-white" />
          </div>
          <span className="font-semibold">EcoAtlas AI Assistant</span>
        </div>
          <button 
            onClick={() => setShowAIChat(false)}
            className="hover:bg-gray-100 rounded p-1"
          >
          <X className="w-4 h-4" />
        </button>
      </div>
      
      <div className="h-64 overflow-y-auto p-4 space-y-3">
        <div className="bg-green-100 p-3 rounded-lg text-sm">
          Hi! I'm your AI assistant. Ask me anything about your carbon footprint, energy usage, or environmental tips!
        </div>
        {chatMessages.map((msg, index) => (
          <div key={index} className={`p-3 rounded-lg text-sm ${
            msg.sender === 'user' ? 'bg-blue-100 ml-8' : 'bg-gray-100 mr-8'
          }`}>
            {msg.text}
          </div>
        ))}
      </div>
      
      <div className="p-4 border-t">
          <form onSubmit={sendMessage} className="flex space-x-2">
          <input
              ref={inputRef}
            type="text"
            value={currentMessage}
            onChange={(e) => setCurrentMessage(e.target.value)}
            placeholder="Ask me anything..."
              className="flex-1 p-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-green-500"
              autoComplete="off"
          />
          <button
              type="submit"
              className="bg-green-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500"
          >
            Send
          </button>
          </form>
      </div>
    </div>
  );
  };

  if (!isAuthenticated) {
    return <AuthModal isLogin={showLogin} setIsLogin={setShowLogin} />;
  }

  return (
    <div className={`min-h-screen transition-colors duration-300 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>
      {/* Header */}
      <header className={`shadow-sm border-b transition-colors duration-300 ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center space-x-3">
              {/* Hamburger Menu Button */}
              <button
                onClick={() => {
                  console.log('Hamburger menu clicked!', showDrawer);
                  setShowDrawer(!showDrawer);
                }}
                className={`w-12 h-12 p-3 rounded-lg transition-colors duration-300 border-2 flex items-center justify-center ${
                  isDarkMode 
                    ? 'text-white hover:bg-gray-700 border-gray-600 bg-gray-800' 
                    : 'text-gray-600 hover:bg-gray-100 border-gray-300 bg-white'
                }`}
                title="Open Menu"
                style={{ width: '48px', height: '48px' }}
              >
                <Menu className="w-6 h-6" />
              </button>
              <EcoAtlasLogo className="w-8 h-8" />
              <h1 className={`text-2xl font-bold transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>EcoAtlas AI</h1>
            </div>
            <UserProfile user={user} onLogout={handleLogout} />
          </div>
        </div>
      </header>

      {/* Side Drawer Navigation */}
      {showDrawer && (
        <>
          {/* Backdrop */}
          <div 
            className="fixed inset-0 bg-black bg-opacity-50 z-40"
            onClick={() => setShowDrawer(false)}
          />
          
          {/* Drawer */}
          <div className={`fixed left-0 top-0 h-full w-80 z-50 transform transition-transform duration-300 ease-in-out ${
            showDrawer ? 'translate-x-0' : '-translate-x-full'
          } ${isDarkMode ? 'bg-gray-800' : 'bg-white'} shadow-xl`}>
            {/* Drawer Header */}
            <div className={`flex items-center justify-between p-6 border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-200'}`}>
              <div className="flex items-center space-x-3">
                <EcoAtlasLogo className="w-8 h-8" />
                <h2 className={`text-xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Menu</h2>
              </div>
              <button
                onClick={() => setShowDrawer(false)}
                className={`p-2 rounded-lg transition-colors duration-300 ${
                  isDarkMode 
                    ? 'text-white hover:bg-gray-700' 
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
              >
                <X className="w-5 h-5" />
              </button>
            </div>
            
            {/* Navigation Items */}
            <nav className="p-4">
              <div className="space-y-6">
                {['Core', 'Analytics', 'Community', 'System', 'Help'].map((category) => (
                  <div key={category}>
                    <h3 className={`text-xs font-semibold uppercase tracking-wider mb-3 ${
                      isDarkMode ? 'text-gray-400' : 'text-gray-500'
                    }`}>
                      {category}
                    </h3>
                    <div className="space-y-1">
                      {[
                        { id: 'dashboard', label: 'Dashboard', icon: TrendingDown, category: 'Core' },
                        { id: 'iot', label: 'IoT Sensors', icon: Wifi, category: 'Core' },
                        { id: 'tracker', label: 'Carbon Tracker', icon: Calculator, category: 'Core' },
                        { id: 'reports', label: 'Reports', icon: FileText, category: 'Analytics' },
                        { id: 'advisor', label: 'AI Advisor', icon: Brain, category: 'Analytics' },
                        { id: 'goals', label: 'Goals & Rewards', icon: Target, category: 'Analytics' },
                        { id: 'solutions', label: 'Solutions', icon: Lightbulb, category: 'Community' },
                        { id: 'marketplace', label: 'Marketplace', icon: ShoppingCart, category: 'Community' },
                        { id: 'community', label: 'Community', icon: Globe, category: 'Community' },
                        { id: 'integrations', label: 'Integrations', icon: Plug, category: 'System' },
                        { id: 'settings', label: 'Settings', icon: Settings, category: 'System' },
                        { id: 'support', label: 'Support', icon: MessageCircle, category: 'Help' },
                        { id: 'about', label: 'About', icon: Info, category: 'Help' }
                      ]
                        .filter(item => item.category === category)
                        .map(({ id, label, icon: Icon }) => (
                          <button
                            key={id}
                            onClick={() => {
                              handleTabChange(id);
                              setShowDrawer(false);
                            }}
                            className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-all duration-300 ${
                              activeTab === id
                                ? isDarkMode
                                  ? 'bg-blue-600 text-white shadow-lg'
                                  : 'bg-green-600 text-white shadow-lg'
                                : isDarkMode
                                ? 'text-white hover:bg-gray-700'
                                : 'text-gray-700 hover:bg-gray-100'
                            }`}
                          >
                            <Icon className="w-5 h-5" />
                            <span className="font-medium">{label}</span>
                          </button>
                        ))}
                    </div>
                  </div>
                ))}
              </div>
            </nav>
          </div>
        </>
      )}

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {activeTab === 'dashboard' && <Dashboard />}
        {activeTab === 'iot' && <IoTSensors />}
        {activeTab === 'tracker' && <CarbonCalculator />}
        {activeTab === 'solutions' && <CarbonSolutions />}
        {activeTab === 'reports' && <ReportsInsights />}
        {activeTab === 'goals' && <GoalsRewards />}
        {activeTab === 'marketplace' && <Marketplace />}
        {activeTab === 'community' && <Community />}
        {activeTab === 'advisor' && <AIAdvisor />}
        {activeTab === 'support' && <SupportTab />}
        {activeTab === 'integrations' && <Integrations />}
        {activeTab === 'settings' && <SettingsPage />}
        {activeTab === 'about' && <AboutPage />}
      </main>

      {/* AI Chat Button */}
      <button
        onClick={() => setShowAIChat(!showAIChat)}
        className={`fixed bottom-6 right-6 w-14 h-14 rounded-full shadow-lg transition-all-smooth hover-lift hover-glow flex items-center justify-center animate-float ${
          isDarkMode 
            ? 'bg-green-600 hover:bg-green-700 text-white' 
            : 'bg-green-600 hover:bg-green-700 text-white'
        }`}
      >
        <MessageCircle className="w-6 h-6" />
      </button>

      {/* AI Chat Window */}
      <AIChat />
    </div>
  );
};

// Main App component with AuthProvider and ThemeProvider
const App = () => {
  return (
    <ThemeProvider>
      <AuthProvider>
        <EcoAtlasApp />
      </AuthProvider>
    </ThemeProvider>
  );
};

export default App;